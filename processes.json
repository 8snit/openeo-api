[
  {
    "name": "get_collection",
    "summary": "Selects a collection.",
    "description": "Filters and selects a single collection provided by the back-end. The back-end provider decides which of the potential collections is the most relevant one to be selected.",
    "min_parameters": 1,
    "parameters": {
      "name": {
        "description": "Filter by collection name",
        "schema": {
          "type": "string",
          "examples": [
            "Sentinel2A-L1C"
          ]
        }
      },
      "spatial_extent": {
        "description": "Filter by spatial extent, may include a vertical axis (height or depth).",
        "schema": {
          "type": "object",
          "required": [
            "west",
            "east",
            "north",
            "south"
          ],
          "properties": {
            "crs": {
              "description": "Coordinate reference system. EPSG codes must be supported. In addition, proj4 strings should be supported by back-ends. Whenever possible, it is recommended to use EPSG codes instead of proj4 strings.\nDefaults to `EPSG:4326` unless the client explicitly requests a different coordinate reference system.",
              "type": "string",
              "default": "EPSG:4326"
            },
            "west": {
              "description": "Lower left corner, coordinate axis 1 (west).",
              "type": "number"
            },
            "east": {
              "description": "Upper right corner, coordinate axis 1 (east).",
              "type": "number"
            },
            "north": {
              "description": "Lower left corner, coordinate axis 2 (north).",
              "type": "number"
            },
            "south": {
              "description": "Upper right corner, coordinate axis 2 (south).",
              "type": "number"
            },
            "base": {
              "description": "Lower left corner, coordinate axis 3 (base, optional).",
              "type": "number"
            },
            "height": {
              "description": "Upper right corner, coordinate axis 3 (height, optional).",
              "type": "number"
            }
          }
        }
      },
      "temporal_extent": {
        "description": "Filter by time",
        "schema": {
          "type": "array",
          "description": "Temporal extent specified by a start and an end time, each formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time. Open date ranges are supported and can be specified by setting one of the times to null. Setting both entries to null is not allowed.",
          "example": [
            "2016-01-01T00:00:00Z",
            "2017-10-01T00:00:00Z"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "minItems": 2,
            "maxItems": 2
          }
        }
      },
      "bands": {
        "description": "Filter by band IDs",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "derived_from": {
        "description": "Filter by derived data set",
        "schema": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "license": {
        "description": "Filter by license",
        "schema": {
          "type": "string",
          "examples": [
            "Apache-2.0"
          ],
          "description": "If available, should be a license from the SPDX License List: https://spdx.org/licenses/"
        }
      }
    },
    "returns": {
      "description": "Processed EO data.",
      "schema": {
        "type": "object",
        "format": "eodata"
      }
    }
  },
  {
    "name": "get_results",
    "summary": "Loads pre-processed data from a job.",
    "description": "Loads data that has been pre-processed by a batch job.",
    "min_parameters": 1,
    "parameters": {
      "url": {
        "description": "An URL to job results.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "url",
          "examples": [
            "http://host.com/api/v1/jobs/12345/results"
          ]
        }
      }
    },
    "returns": {
      "description": "Processed EO data.",
      "schema": {
        "type": "object",
        "format": "eodata"
      }
    },
    "exceptions": {
      "NotFound": {
        "code": 101,
        "description": "Data set doesn't exist."
      },
      "FileFormatNotSupported": {
        "code": 102,
        "description": "The file format of the specified data set is not supported to be read by the back-end."
      }
    }
  },
  {
    "name": "filter_bands",
    "summary": "Filter an image collection by bands.",
    "description": "Allows to extract one or multiple bands of multi-band raster image collection.\nBands can be chosen either by band id, band name or by wavelength.\n\nimagery and at one of the other arguments is required to be specified.",
    "min_parameters": 2,
    "parameters": {
      "imagery": {
        "description": "EO data to process.",
        "required": true,
        "schema": {
          "type": "object",
          "format": "eodata"
        }
      },
      "bands": {
        "description": "string or array of strings containing band ids.",
        "schema": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "names": {
        "description": "string or array of strings containing band names.",
        "schema": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "wavelengths": {
        "description": "number or two-element array of numbers containing a wavelength or a minimum and maximum wavelength respectively.",
        "schema": {
          "type": [
            "number",
            "array"
          ],
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "number"
          }
        }
      }
    },
    "returns": {
      "description": "Processed EO data.",
      "schema": {
        "type": "object",
        "format": "eodata"
      }
    }
  },
  {
    "name": "filter_daterange",
    "summary": "Filter an image collection by temporal extent.",
    "min_parameters": 1,
    "parameters": {
      "imagery": {
        "description": "EO data to process.",
        "required": true,
        "schema": {
          "type": "object",
          "format": "eodata"
        }
      },
      "extent": {
        "type": "array",
        "description": "Temporal extent specified by a start and an end time, each formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time. Open date ranges are supported and can be specified by setting one of the times to null. Setting both entries to null is not allowed.",
        "example": [
          "2016-01-01T00:00:00Z",
          "2017-10-01T00:00:00Z"
        ],
        "items": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "minItems": 2,
          "maxItems": 2
        }
      }
    },
    "returns": {
      "description": "Processed EO data.",
      "schema": {
        "type": "object",
        "format": "eodata"
      }
    }
  },
  {
    "name": "process_graph",
    "description": "Loads another process graph and applies it to the specified imagery. This can be an externally hosted process graph.",
    "parameters": {
      "imagery": {
        "description": "EO data to process.",
        "required": true,
        "schema": {
          "type": "object",
          "format": "eodata"
        }
      },
      "url": {
        "description": "An URL to a process graph.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "url",
          "examples": [
            "http://otherhost.org/api/v1/users/12345/process_graphs/abcdef"
          ]
        }
      },
      "variables": {
        "description": "An object holding key-value-pairs with values for variables that are defined by the process graph. The key of the pair has to be the corresponding `variable_id` for the value specified. The replacement for the variable is the value of the pair.",
        "schema": {
          "type": "object",
          "additionalProperties": true
        }
      }
    },
    "returns": {
      "description": "Processed EO data.",
      "schema": {
        "type": "object",
        "format": "eodata"
      }
    },
    "exceptions": {
      "NotFound": {
        "code": 101,
        "description": "Process graph doesn't exist."
      },
      "NotReadable": {
        "code": 102,
        "description": "Process graph can't be parsed."
      }
    }
  }
]