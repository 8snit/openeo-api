{
	"asyncapi": "1.0.0",
	"info": {
		"title": "openEO API for Subscriptions",
		"version": "0.3.0",
		"description": "The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.\n\nThis is a subset of the openEO API that handles WebSocket-based protocols for subscriptions and notifications.\n\n`openeo.subscribe`, `openeo.unsubsribe` and `openeo.welcome` MUST be implemeneted by all back-ends.\n",
		"contact": {
			"name": "openEO Consortium",
			"url": "http://openeo.org/",
			"email": "openeo@list.tuwien.ac.at"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"externalDocs": {
		"description": "openEO Documentation",
		"url": "https://open-eo.github.io/openeo-api/v/0.3.0/"
	},
	"baseTopic": "openeo",
	"topics": {
		"welcome": {
			"publish": {
				"summary": "Welcome message for clients.",
				"description": "Sends the supported topics, excluding openeo.subscribe, openeo.unsubsribe and openeo.welcome (because these MUST be implemented by every back-end anyway). This message MUST be sent by all servers directly after the connection has been established.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"topics"
							],
							"properties": {
								"topics": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.welcome"
						},
						"payload": {
							"topics": [
								"openeo.jobs.output",
								"openeo.jobs.status",
								"openeo.data"
							]
						}
					}
				}
			}
		},
		"subscribe": {
			"subscribe": {
				"summary": "Subscribes to certain topics.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"topics"
							],
							"properties": {
								"topics": {
									"$ref": "#/components/schemas/topics"
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.subscribe"
						},
						"payload": {
							"topics": [
								{
									"topic": "openeo.jobs.status",
									"job_id": "a3cca2b2aa1e3b5b"
								},
								{
									"topic": "openeo.files"
								}
							]
						}
					}
				}
			}
		},
		"unsubscribe": {
			"subscribe": {
				"summary": "Unsubscribes from certain topics.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"topics"
							],
							"properties": {
								"topics": {
									"$ref": "#/components/schemas/topics"
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.unsubscribe"
						},
						"payload": {
							"topics": [
								{
									"topic": "openeo.jobs.status",
									"job_id": "a3cca2b2aa1e3b5b"
								},
								{
									"topic": "openeo.files"
								}
							]
						}
					}
				}
			}
		},
		"jobs.output": {
			"publish": {
				"summary": "Data written to the output console with processes of a job.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"job_id",
								"output"
							],
							"properties": {
								"job_id": {
									"$ref": "#/components/schemas/job_id"
								},
								"output": {
									"description": "Output data of any type"
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.jobs.debug"
						},
						"payload": {
							"job_id": "a3cca2b2aa1e3b5b",
							"output": "Hello world!"
						}
					}
				}
			}
		},
		"jobs.debug": {
			"publish": {
				"summary": "Debugging information from job execution.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"job_id",
								"message"
							],
							"properties": {
								"job_id": {
									"$ref": "#/components/schemas/job_id"
								},
								"message": {
									"type": "string",
									"description": "The thrown debug message"
								},
								"process": {
									"type": "object",
									"description": "Process throwing the debug message.",
									"required": [
										"name",
										"parameters"
									],
									"properties": {
										"name": {
											"type": "string",
											"description": "Name of the process."
										},
										"parameters": {
											"type": "object",
											"description": "Key-value pairs for the parameters of the process. The keys are the parameter names and the values are the actual values specified for the parameter. Specify the empty object if the process does not have any parameters or was called without parameters.",
											"additionalProperties": true
										}
									}
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.jobs.debug"
						},
						"payload": {
							"job_id": "a3cca2b2aa1e3b5b",
							"message": "Invalid SRS specified, defaulting to EPSG:4326.",
							"process": {
								"name": "filter_bbox",
								"parameters": {
									"srs": "EPSG:9999",
									"left": 55,
									"right": 56,
									"top": 11,
									"bottom": 10
								}
							}
						}
					}
				}
			}
		},
		"jobs.status": {
			"publish": {
				"summary": "Inform about a status change of a job.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"job_id",
								"status"
							],
							"properties": {
								"job_id": {
									"$ref": "#/components/schemas/job_id"
								},
								"status": {
									"type": "string",
									"description": "Current status",
									"example": "running",
									"enum": [
										"submitted",
										"queued",
										"running",
										"canceled",
										"finished",
										"error"
									]
								},
								"progress": {
									"type": "number",
									"description": "Progress of a running job in percent."
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.jobs.status"
						},
						"payload": {
							"job_id": "a3cca2b2aa1e3b5b",
							"status": "running",
							"progress": 75.5
						}
					}
				}
			}
		},
		"files": {
			"publish": {
				"summary": "Inform about changes regarding the user files.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"user_id",
								"path",
								"action"
							],
							"properties": {
								"user_id": {
									"$ref": "#/components/schemas/user_id"
								},
								"path": {
									"type": "string",
									"description": "Path of the file, relative to the user's root dir, i.e. MUST NOT contain the name of that root dir and MUST NOT start with a slash. MUST NOT be url-encoded."
								},
								"action": {
									"type": "string",
									"description": "Describes what has changed.",
									"enum": [
										"created",
										"updated",
										"deleted"
									]
								}
							}
						}
					},
					"example": {
						"message": {
							"issued": "2018-08-07T14:06:36Z",
							"topic": "openeo.files"
						},
						"payload": {
							"user_id": "john_doe",
							"path": "new_file.txt",
							"action": "created"
						}
					}
				}
			}
		},
		"data": {
			"publish": {
				"summary": "Inform about changes regarding an EO dataset. Of the `temporal_extent` and `spatial_extent` fields, at least one MUST be specified.",
				"payload": {
					"type": "object",
					"required": [
						"message",
						"payload"
					],
					"properties": {
						"message": {
							"$ref": "#/components/schemas/message"
						},
						"payload": {
							"type": "object",
							"required": [
								"data_id"
							],
							"properties": {
								"data_id": {
									"$ref": "#/components/schemas/data_id"
								},
								"temporal_extent": {
									"type": "string",
									"description": "MUST be specified if the temporal extent of the dataset has changed. Uses the same format as in the openEO API for temporal extents. Specifies the temporal extent of the change, not of the whole dataset."
								},
								"spatial_extent": {
									"type": "object",
									"description": "MUST be specified if the spatial extent of the dataset has changed. Uses the same object structure as in the openEO API for spatial extents. Specifies the spatial extent of the change, not of the whole dataset."
								}
							}
						}
					}
				},
				"example": {
					"message": {
						"issued": "2018-08-07T14:06:36Z",
						"topic": "openeo.data"
					},
					"payload": {
						"data_id": "MOD18Q1",
						"temporal_extent": "2018-08-07T15:30:00Z/2018-08-08T16:43:00Z",
						"spatial_extent": {
							"crs": "EPSG:4326",
							"left": 34.6,
							"right": 35.1,
							"bottom": 39.6,
							"top": 40.1
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"message": {
				"type": "object",
				"required": [
					"topic",
					"issued"
				],
				"properties": {
					"issued": {
						"type": "string",
						"format": "date-time",
						"description": "Date and time when the message was sent."
					},
					"topic": {
						"type": "string",
						"description": "Message type",
						"example": "openeo.sample"
					}
				}
			},
			"data_id": {
				"type": "string",
				"description": "Unique identifier for EO datasets.",
				"example": "MOD18Q1"
			},
			"job_id": {
				"type": "string",
				"description": "Unique identifier of a job that is generated by the back-end during job submission.",
				"example": "a3cca2b2aa1e3b5b"
			},
			"user_id": {
				"type": "string",
				"description": "Unique identifier of the user.",
				"example": "john_doe"
			},
			"topics": {
				"type": "array",
				"description": "A list of topics to (un)subscribe to/from.",
				"items": {
					"type": "object",
					"description": "A topic MUST be specified and may be complemented by restricting parameters, e.g. a job (id) to limit the subscription to. If no restricting parameter is specified, it (un)subscribes to/from all resources, e.g. all jobs.",
					"required": [
						"topic"
					],
					"properties": {
						"topic": {
							"type": "string",
							"description": "One of the supported publish topics."
						}
					},
					"additionalProperties": true
				},
				"example": [
					{
						"topic": "openeo.jobs.output",
						"job_id": 123
					},
					{
						"topic": "openeo.jobs.status"
					},
					{
						"topic": "openeo.data",
						"data_id": "MOD18Q1"
					}
				]
			}
		}
	}
}
