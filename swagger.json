{
  "swagger": "2.0",
  "info": {
    "title": "OpenEO API",
    "version": "0.0.2",
    "description": "The OpenEO API specification for interoperable cloud-based processing of large Earth observation datasets. **This early draft version is incomplete and intended for working on a prototype and a proof of concept.** Things that are currently missing particularly include: \n * Authentication and authorization with OAuth 2.0, \n * how results of computations can be downloaded, \n * how data is streamed into UDFs and how the output of UDFs is returned, \n * how services are organized as microservices, \n * how payments can be handled, \n * and how OpenSearch is interfaced",
    "contact": {
      "name": "Marius Appel",
      "url": "https://github.com/open-eo/openeo-api-poc",
      "email": "marius.appel@uni-muenster.de"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "General API Concept Description",
    "url": "https://open-eo.github.io/openeo-api-poc"
  },
  "host": "localhost",
  "basePath": "/api/v0/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "API Information",
      "description": "General services about the API implementation at a specific back-end."
    },
    {
      "name": "EO Data Discovery",
      "description": "Discovery of Earth observation datasets that are available at the back-end."
    },
    {
      "name": "Process Discovery",
      "description": "Discovery of processes that are available at the back-end."
    },
    {
      "name": "Service Discovery",
      "description": "Discovery of service types that are available at the back-end."
    },
    {
      "name": "UDF Runtime Discovery",
      "description": "Discovery of programming languages and their runtime environments to execute user-defined functions at the back-end."
    },
    {
      "name": "User Content",
      "description": "Services working with user content."
    },
    {
      "name": "Authentication",
      "description": "Authentication of users."
    },
    {
      "name": "Job Management",
      "description": "Services to manage jobs and their computations."
    },
    {
      "name": "Result Access",
      "description": "Services to access processing results."
    },
    {
      "name": "Services",
      "description": "Management of web-services for accessing job results."
    },
    {
      "name": "CORS",
      "description": "Endpoints to allow Cross Origin Requests for requests from internet browsers/JavaScript."
    }
  ],
  "responses": {
    "auth_required": {
      "description": "The back-end requires clients to authenticate in order to process this request."
    },
    "not_implemented": {
      "description": "This API feature is not supported by the back-end."
    },
    "access_denied": {
      "description": "Authorization failed, access to the requested resource has been denied."
    },
    "unavailable": {
      "description": "The service is currently unavailable."
    },
    "method_not_allowed": {
      "description": "The requested HTTP method is not supported or allowed to be requested."
    },
    "format_not_supported": {
      "description": "The server is not capable to deliver the requested format."
    },
    "server_error": {
      "description": "The request can't be fulfilled due to an error at the back-end."
    },
    "cors_options": {
      "description": "Gives internet browsers the permission to access the requested resource.",
      "headers": {
        "Access-Control-Allow-Origin": {
          "type": "string",
          "description": "Allowed origin of the request, usually `*`",
          "default": "*"
        },
        "Access-Control-Allow-Methods": {
          "type": "array",
          "description": "Comma-separated list of HTTP methods allowed to be requested. List all implemented HTTP methods for the endpoint here.",
          "collectionFormat": "csv",
          "items": {
            "type": "string"
          }
        },
        "Access-Control-Allow-Headers": {
          "type": "array",
          "description": "Comma-separated list of HTTP headers allowed to be send. If the back-end requires authorization it needs to contain at least `Authorization`",
          "collectionFormat": "csv",
          "items": {
            "type": "string"
          }
        },
        "Access-Control-Allow-Credentials": {
          "type": "boolean",
          "description": "If authorization is required by the back-end it needs to be set to `true`"
        },
        "Content-Type": {
          "type": "string",
          "description": "Should return the content type delivered by the request that the permission is requested for."
        }
      }
    }
  },
  "parameters": {
    "user_id": {
      "name": "user_id",
      "in": "path",
      "type": "string",
      "description": "user identifier, the special value `me` automatically refers to the own ID based on the provided HTTP `Authorization` header.",
      "required": true
    },
    "process_graph_id": {
      "name": "process_graph_id",
      "in": "path",
      "type": "string",
      "description": "Process graph identifier string",
      "required": true
    },
    "service_id": {
      "name": "service_id",
      "in": "path",
      "type": "string",
      "description": "Service identifier string",
      "required": true
    },
    "job_id": {
      "name": "job_id",
      "in": "path",
      "type": "string",
      "description": "Job identifier string",
      "required": true
    },
    "file_path": {
      "name": "path",
      "in": "path",
      "type": "string",
      "description": "Path relative to the user's root directory, must be URL encoded",
      "required": true
    },
    "output_format": {
      "name": "format",
      "in": "query",
      "description": "Description of the desired output format. If not specified the back-end uses the format specified in a prior `/jobs/{job_id}/queue` call (if applicable) or uses its default file format. The mentioned list of formats in this API is non-exclusive.",
      "type": "string",
      "enum": [
        "nc",
        "json",
        "tif",
        "png",
        "jpeg"
      ],
      "required": false
    }
  },
  "definitions": {
    "process_description": {
      "description": "Defines and describes a process including it's expected input arguments. Arguments ",
      "type": "object",
      "required": [
        "process_id",
        "description"
      ],
      "properties": {
        "process_id": {
          "type": "string",
          "description": "The unique identifier of the process."
        },
        "description": {
          "type": "string",
          "description": "A short and concise description of what the process does and how the output looks like."
        },
        "link": {
          "type": "string",
          "description": "Reference to an external process definition if the process has been defined over different back ends within OpenEO"
        },
        "args": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "description"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "A short and concise description of the process argument."
              },
              "required": {
                "type": "boolean",
                "default": true,
                "description": "Defines whether an argument is required or optional."
              }
            },
            "additionalProperties": true,
            "description": "**DEFAULT VALUES FOR ARGUMENTS ARE NOT FORMALIZED IN THE SWAGGER 2.0 DEFINITION DUE TO MISSING SUPPORT FOR oneOf OR anyOf SCHEMA COMBINATIONS.**"
          }
        }
      },
      "example": {
        "process_id": "band_arithmetic",
        "description": "Perform basic arithmetic expressions on individual pixel and their band values.",
        "args": {
          "imagery": {
            "description": "input image or image collection",
            "required": true
          },
          "expr": {
            "description": "expressions as array, the result will have as many bands as the number of given expressions."
          }
        }
      }
    },
    "band_datatype": {
      "type": "string",
      "description": "Data type for band values including its bit size.",
      "enum": [
        "uint8",
        "uint16",
        "uint32",
        "uint64",
        "int8",
        "int16",
        "int32",
        "int64",
        "float16",
        "float32",
        "float64"
      ]
    },
    "band_description": {
      "type": "object",
      "required": [
        "band_id"
      ],
      "properties": {
        "band_id": {
          "description": "unique identifier for bands",
          "type": "string"
        },
        "name": {
          "description": "optional name to refer to bands by name such as 'red' instead of their band_id.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/band_datatype"
        },
        "offset": {
          "description": "offset to convert band values to the actual measurement scale.",
          "type": "number",
          "default": 0
        },
        "scale": {
          "description": "scale to convert band values to the actual measurement scale.",
          "type": "number",
          "default": 1
        },
        "unit": {
          "description": "unit of measurements (preferably SI)",
          "type": "string"
        },
        "nodata": {
          "description": "specific values representing no data",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "additionalProperties": true
    },
    "udf_type": {
      "type": "string",
      "description": "The UDF types define how UDFs can be exposed to the data, how they can be parallelized, and how the result schema should be structured.",
      "enum": [
        "apply_pixel",
        "apply_scene",
        "reduce_time",
        "reduce_space",
        "window_time",
        "window_space",
        "window_spacetime",
        "agregate_time",
        "aggregate_space",
        "aggregate_spacetime"
      ]
    },
    "udf_description": {
      "description": "Defines and describes a UDF using the same schema as the description of processes offered by the back-end.",
      "type": "object",
      "required": [
        "process_id",
        "description"
      ],
      "properties": {
        "process_id": {
          "type": "string",
          "description": "The unique identifier of the process."
        },
        "description": {
          "type": "string",
          "description": "A short and concise description of what the process does and how the output looks like."
        },
        "link": {
          "type": "string",
          "description": "Reference to an external process definition if the process has been defined over different back ends within OpenEO"
        },
        "args": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "description"
            ],
            "properties": {
              "description": {
                "type": "string",
                "description": "A short and concise description of the process argument."
              },
              "required": {
                "type": "boolean",
                "default": true,
                "description": "Defines whether an argument is required or optional."
              }
            },
            "additionalProperties": true,
            "description": "**DEFAULT VALUES FOR ARGUMENTS ARE NOT FORMALIZED IN THE SWAGGER 2.0 DEFINITION DUE TO MISSING SUPPORT FOR oneOf OR anyOf SCHEMA COMBINATIONS.**"
          }
        }
      },
      "example": {
        "process_id": "udf/R/reduce_time",
        "description": "Applies an R function independently over all input time series that produces a zero-dimensional value (scalar or multi-band tuple) as output (per time series).",
        "args": {
          "imagery": {
            "description": "input (image) time series",
            "required": true
          },
          "script": {
            "description": "Script resource that has been uploaded to user space before. ",
            "required": true
          }
        }
      }
    },
    "process_graph": {
      "description": "A process graph defines an executable process, i.e. one process or a combination of chained processes including specific arguments.",
      "type": "object",
      "required": [
        "process_id"
      ],
      "properties": {
        "process_id": {
          "type": "string",
          "description": "The unique identifier of the process."
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arg_set"
          },
          "description": "Collection of arguments identified by their name."
        }
      },
      "example": {
        "process_id": "median_time",
        "args": {
          "imagery": {
            "process_id": "NDVI",
            "args": {
              "imagery": {
                "process_id": "filter_daterange",
                "args": {
                  "imagery": {
                    "product_id": "Sentinel2A-L1C"
                  }
                },
                "from": "2017-01-01",
                "to": "2017-01-31"
              }
            },
            "red": "4",
            "nir": "8"
          }
        }
      }
    },
    "arg_set": {
      "description": "Defines an object schema for collection (uniquely named) arguments as input to processes. **THIS TYPE IS NOT FORMALIZED IN THE SWAGGER 2.0 DEFINITION DUE TO MISSING SUPPORT FOR oneOf OR anyOf SCHEMA COMBINATIONS.**",
      "type": "object",
      "additionalProperties": true
    },
    "job_id": {
      "type": "string",
      "description": "Unique identifier of a job that is generated by the back-end during job submission.",
      "example": "748df7caa8c84a7ff6e"
    },
    "job_submitted": {
      "type": "string",
      "format": "dateTime",
      "description": "Date and time of job submission in ISO 8601 format",
      "example": "2017-01-01T09:32:12Z"
    },
    "job_updated": {
      "type": "string",
      "format": "dateTime",
      "description": "Date and time of last status change in ISO 8601 format",
      "example": "2017-01-01T09:36:18Z"
    },
    "job_user_id": {
      "type": "string",
      "description": "Identifier of the user, who submitted the job and pays incurred costs if needed.",
      "example": "bd6f9faf93b4"
    },
    "job_consumed_credits": {
      "type": "number",
      "description": "Credits consumed by this process",
      "example": 392
    },
    "job_status": {
      "type": "string",
      "enum": [
        "submitted",
        "queued",
        "running",
        "finished",
        "paused",
        "canceled",
        "error",
        "unknown"
      ],
      "description": "The current status of the job."
    },
    "job_full": {
      "description": "Defines full metadata of processing jobs that have been submitted by users.",
      "type": "object",
      "required": [
        "job_id",
        "status",
        "process_graph"
      ],
      "properties": {
        "job_id": {
          "$ref": "#/definitions/job_id"
        },
        "status": {
          "$ref": "#/definitions/job_status"
        },
        "process_graph": {
          "$ref": "#/definitions/process_graph"
        },
        "view": {
          "$ref": "#/definitions/view"
        },
        "submitted": {
          "$ref": "#/definitions/job_submitted"
        },
        "updated": {
          "$ref": "#/definitions/job_updated"
        },
        "user_id": {
          "$ref": "#/definitions/job_user_id"
        },
        "consumed_credits": {
          "$ref": "#/definitions/job_consumed_credits"
        }
      },
      "additionalProperties": true
    },
    "job_meta": {
      "description": "Defines a metadata subset of processing jobs that have been submitted by users. To get the full metadata for a job, including view and process graph, call `GET /jobs/{job_id}`",
      "type": "object",
      "required": [
        "job_id",
        "status"
      ],
      "properties": {
        "job_id": {
          "$ref": "#/definitions/job_id"
        },
        "status": {
          "$ref": "#/definitions/job_status"
        },
        "submitted": {
          "$ref": "#/definitions/job_submitted"
        },
        "updated": {
          "$ref": "#/definitions/job_updated"
        },
        "user_id": {
          "$ref": "#/definitions/job_user_id"
        },
        "consumed_credits": {
          "$ref": "#/definitions/job_consumed_credits"
        }
      }
    },
    "service_type": {
      "description": "Definintion of possible web services to access result data. All available web service types can be retrieved via `GET /services/types`",
      "type": "string"
    },
    "service_args": {
      "type": "object",
      "description": "Definintion of additional arguments a web service might need to be created. For example, this could specify the required version of the service, visualization details or any other service dependant configuration.",
      "example": {
        "version": 1.1
      }
    },
    "service": {
      "description": "Defines metadata of running services to access result data.",
      "type": "object",
      "required": [
        "service_id",
        "service_type",
        "service_url",
        "job_id"
      ],
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique identifier of a service that is generated by the back-end during service creation."
        },
        "service_url": {
          "type": "string",
          "description": "URL at which the service is accessible. Doesn't necessarily need to contain the API base url."
        },
        "service_type": {
          "$ref": "#/definitions/service_type"
        },
        "service_args": {
          "$ref": "#/definitions/service_args"
        },
        "job_id": {
          "type": "string",
          "description": "The job identifier string refering to the job this service is running for."
        }
      },
      "additionalProperties": true,
      "example": {
        "service_id": "91f3caa3b5281a",
        "service_type": "wms",
        "service_url": "https://openeo.org/wms/91f3caa3b5281a",
        "service_args": {
          "version": 1.1
        },
        "job_id": "42d5k3nd92mk49dmj294md"
      }
    },
    "view": {
      "type": "object",
      "description": "The view defines how we look at the data (spatial extent, resolution, time range, etc.) for processing. It can be used to experiment with tasks and processes on small subdataset.",
      "properties": {
        "space": {
          "description": "Defines spatial resolution, window, and resampling method used for running processes on small sub datasets",
          "type": "object",
          "properties": {
            "srs": {
              "type": "string",
              "description": "Spatial reference system as proj4 string or epsg code such as `EPSG:3857`"
            },
            "window": {
              "type": "object",
              "description": "boundaries of the spatial window as coordinates expressed in the given reference system.",
              "required": [
                "left",
                "top",
                "right",
                "bottom"
              ],
              "properties": {
                "left": {
                  "type": "number"
                },
                "top": {
                  "type": "number"
                },
                "right": {
                  "type": "number"
                },
                "bottom": {
                  "type": "number"
                }
              }
            },
            "cell_size": {
              "type": "number"
            },
            "resampling": {
              "type": "string",
              "description": "resampling method to use (taken from [GDAL](http://www.gdal.org/gdal_translate.html))",
              "default": "nearest",
              "enum": [
                "nearest",
                "bilinear",
                "cubic",
                "cubicspline",
                "lanczos",
                "average",
                "mode"
              ]
            }
          },
          "example": {
            "srs": "EPSG:4326",
            "window": {
              "left": -10.21,
              "top": 53.23,
              "right": 12.542,
              "bottom": 12.32
            },
            "resolution": 0.25,
            "resampling": "nearest"
          }
        },
        "time": {
          "description": "Defines temporal resolution, window, and resampling method used for running processes on small sub datasets",
          "type": "object",
          "properties": {
            "window": {
              "type": "object",
              "description": "Start and end date/time in ISO 8601 format",
              "required": [
                "start",
                "end"
              ],
              "properties": {
                "start": {
                  "type": "string",
                  "format": "dateTime"
                },
                "end": {
                  "type": "string",
                  "format": "dateTime"
                }
              }
            },
            "time_step": {
              "type": "string",
              "description": "temporal granularity given as ISO 8601 time duration. In order to avoid mixing inconsistent durations such as `P1M30DT24H` only a single integer number with date/time component such as `P1M`, `P30D`, `PT24H` should be specified."
            },
            "resampling": {
              "type": "string",
              "description": "resampling method to use (taken from [GDAL](http://www.gdal.org/gdal_translate.html))",
              "default": "nearest",
              "enum": [
                "nearest",
                "bilinear",
                "cubic",
                "cubicspline",
                "lanczos",
                "average",
                "mode"
              ]
            }
          },
          "example": {
            "window": {
              "start": "2017-01-01",
              "end": "2018-01-01"
            },
            "resolution": "P1M",
            "resampling": "nearest"
          }
        }
      },
      "additionalProperties": true
    }
  },
  "paths": {
    "/capabilities": {
      "get": {
        "summary": "Returns the capabilities, i.e., which OpenEO API features are supported  by the back-end.",
        "description": "The request will ask the back-end which features of the OpenEO API are supported and return a simple JSON description with available endpoints.",
        "tags": [
          "API Information"
        ],
        "responses": {
          "200": {
            "description": "An array of implemented API endpoints",
            "schema": {
              "example": [
                "/data",
                "/data/{product_id}",
                "/processes"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          }
        }
      }
    },
    "/data": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns basic information about EO datasets that are available at the back-end.",
        "description": "Requests will ask the back-end for available data and will return an array of available datasets with very basic information such as their unique identifiers. Results can be filtered by space, time, and product name with very simple search expressions.",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "qname",
            "type": "string",
            "description": "string expression to search available datasets by name",
            "required": false
          },
          {
            "in": "query",
            "name": "qgeom",
            "type": "string",
            "description": "WKT polygon to search for available datasets that spatially intersect with the polygon",
            "required": false
          },
          {
            "in": "query",
            "name": "qstartdate",
            "type": "string",
            "description": "ISO 8601 date/time string to find datasets with any data acquired after the given date/time",
            "required": false
          },
          {
            "in": "query",
            "name": "qenddate",
            "type": "string",
            "description": "ISO 8601 date/time string to find datasets with any data acquired before the given date/time",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "An array of EO datasets including their unique identifiers and some basic metadata.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                },
                "additionalProperties": true
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": [
                {
                  "product_id": "MOD09Q1",
                  "description": " MODIS/Terra Surface Reflectance 8-Day L3 Global 250m SIN Grid V006",
                  "source": "U.S. Geological Survey (USGS), DOI: 10.5067/MODIS/MOD09Q1.006"
                },
                {
                  "product_id": "SENTINEL2-1C",
                  "description": "Sentinel 2 Level-1C: Top-of-atmosphere reflectances in cartographic geometry",
                  "source": "European Space Agency (ESA)"
                },
                {
                  "product_id": "LandsatETM+",
                  "description": "Landsat Enhanced Thematic Mapper Plus (ETM+)",
                  "source": "U.S. Geological Survey (USGS)"
                }
              ]
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/data/opensearch": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "OpenSearch endpoint to receive standardized data search results.",
        "description": "This service offers more complex search functionality and returns results in an OpenSearch compliant Atom XML format.",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/atom+xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string",
            "description": "string expression to search available datasets",
            "required": false
          },
          {
            "in": "query",
            "name": "start",
            "type": "integer",
            "description": "page start value",
            "required": false
          },
          {
            "in": "query",
            "name": "rows",
            "type": "integer",
            "description": "page size value",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "An array of EO datasets including their unique identifiers and some basic metadata.",
            "examples": {
              "application/atom+xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <feed xmlns=\"http://www.w3.org/2005/Atom\" \n  xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">\n  <title>Supported EO datasets by Example, Inc.</title>\n  <updated>2018-01-18T10:30:00Z</updated>\n  <author>\n    <name>Example, Inc.</name>\n  </author> \n  <id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\n  <link rel=\"self\" href=\"http://www.exmaple.com/api/1.0/data/opensearch\"/>\n  <link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"http://example.com/api/1.0/data/opensearch/description.xml\"/>\n  <opensearch:totalResults>3</opensearch:totalResults>\n  <opensearch:Query role=\"request\" startPage=\"1\" />\n  <entry>\n    <title>MOD09Q1</title>\n    <link rel=\"alternate\" href=\"http://www.exmaple.com/api/1.0/data/MOD09Q1\"/>\n    <id>urn:uuid:1223c695-cfb8-4ebb-aaaa-80da344efa6a</id>\n    <updated>2017-09-18T10:30:00Z</updated>\n    <rights type=\"text\">U.S. Geological Survey (USGS), DOI: 10.5067/MODIS/MOD09Q1.006</rights>\n    <summary type=\"text\">MODIS/Terra Surface Reflectance 8-Day L3 Global 250m SIN Grid V00 </summary>\n  </entry>\n  <entry>\n    <title>SENTINEL2-1C</title>\n    <link rel=\"alternate\" href=\"http://www.exmaple.com/api/1.0/data/SENTINEL2-1C\"/>\n    <id>urn:uuid:1224c695-cfc8-4ebb-bbbb-90da344efa6b</id>\n    <updated>2017-12-01T01:00:00Z</updated>\n    <rights type=\"text\">European Space Agency (ESA)</rights>\n    <summary type=\"text\">Sentinel 2 Level-1C: Top-of-atmosphere reflectances in cartographic geometry</summary>\n  </entry>\n  <entry>\n    <title>LandsatETM+</title>\n    <link rel=\"alternate\" href=\"http://www.exmaple.com/api/1.0/data/LandsatETM%2B\"/>\n    <id>urn:uuid:1225c695-cfd8-4ebb-cccc-70da344efa6c</id>\n    <updated>2015-01-10T22:45:12Z</updated>\n    <rights type=\"text\">U.S. Geological Survey (USGS)</rights>\n    <summary type=\"text\">Landsat Enhanced Thematic Mapper Plus (ETM+)</summary>\n  </entry>\n</feed>"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/data/{product_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "type": "string",
          "description": "product identifier string such as `MOD18Q1`",
          "required": true
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns further information on a given EO product available at the back-end.",
        "description": "The request will ask the back-end for further details about a product specified by the identifier `product_id`",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with metadata of the EO dataset.",
            "schema": {
              "type": "object",
              "required": [
                "product_id",
                "description",
                "extent",
                "bands"
              ],
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "extent": {
                  "description": "spatial extent of the available imagery",
                  "type": "object",
                  "properties": {
                    "srs": {
                      "description": "spatial reference system readable by GDAL (e.g. as 'WKT', 'proj4', or 'EPSG:xy')",
                      "type": "string"
                    },
                    "left": {
                      "type": "number"
                    },
                    "right": {
                      "type": "number"
                    },
                    "top": {
                      "type": "number"
                    },
                    "bottom": {
                      "type": "number"
                    }
                  }
                },
                "time": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "description": "Date/time in ISO 8601 format",
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "description": "Date/time in ISO 8601 format",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "bands": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/band_description"
                  }
                }
              },
              "additionalProperties": true
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": {
                "product_id": "Sentinel-2A-L1C",
                "description": "Sentinel 2 Level-1C: Top-of-atmosphere reflectances in cartographic geometry",
                "source": "European Space Agency (ESA)",
                "extent": {
                  "srs": "EPSG:4326",
                  "left": -34,
                  "right": 35,
                  "bottom": 39,
                  "top": 71
                },
                "time": {
                  "from": "2016-01-01",
                  "to": "2017-10-01"
                },
                "bands": [
                  {
                    "band_id": "1",
                    "wavelength_nm": 443.9,
                    "res_m": 60,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "2",
                    "name": "blue",
                    "wavelength_nm": 496.6,
                    "res_m": 10,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "3",
                    "name": "green",
                    "wavelength_nm": 560,
                    "res_m": 10,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "4",
                    "name": "red",
                    "wavelength_nm": 664.5,
                    "res_m": 10,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "5",
                    "wavelength_nm": 703.9,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "6",
                    "wavelength_nm": 740.2,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "7",
                    "wavelength_nm": 782.5,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "8",
                    "name": "nir",
                    "wavelength_nm": 835.1,
                    "res_m": 10,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "8a",
                    "wavelength_nm": 864.8,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "9",
                    "wavelength_nm": 945,
                    "res_m": 60,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "10",
                    "wavelength_nm": 1373.5,
                    "res_m": 60,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "11",
                    "wavelength_nm": 1613.7,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  },
                  {
                    "band_id": "12",
                    "wavelength_nm": 2202.4,
                    "res_m": 20,
                    "scale": 0.0001,
                    "offset": 0,
                    "type": "int16",
                    "unit": "1"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "EO dataset with specified identifier is not available"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/processes": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns processes supported by the back-end.",
        "description": "The request will ask the back-end for available processes and will return an array of available processes with their unique identifiers and description.",
        "tags": [
          "Process Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "qname",
            "in": "query",
            "type": "string",
            "description": "string expression to search for available processes by name",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "An array of EO processes including their unique identifiers and a description.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "process_id",
                  "description"
                ],
                "properties": {
                  "process_id": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": [
                {
                  "process_id": "NDVI",
                  "description": "Computes the normalized difference vegetation index (NDVI) for all pixels of the input dataset."
                },
                {
                  "process_id": "median_time",
                  "description": "Applies median aggregation to pixel time series for all bands of the input dataset."
                }
              ]
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/processes/opensearch": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "OpenSearch endpoint to request standardized process search results.",
        "description": "This service offers more complex search functionality and returns results in an OpenSearch compliant Atom XML format.",
        "tags": [
          "Process Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "description": "string expression to search available processes",
            "required": false
          },
          {
            "name": "start",
            "in": "query",
            "type": "integer",
            "description": "page start value",
            "required": false
          },
          {
            "name": "rows",
            "in": "query",
            "type": "integer",
            "description": "page size value",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OpenSearch response",
            "examples": {
              "application/atom+xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <feed xmlns=\"http://www.w3.org/2005/Atom\" \n  xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">\n  <title>Supported EO processes by Example, Inc.</title>\n  <updated>2018-01-18T10:30:00Z</updated>\n  <author>\n    <name>Example, Inc.</name>\n  </author> \n  <id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>\n  <link rel=\"self\" href=\"http://www.exmaple.com/api/1.0/processes/opensearch\"/>\n  <link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"http://example.com/api/1.0/processes/opensearch/description.xml\"/>\n  <opensearch:totalResults>2</opensearch:totalResults>\n  <opensearch:Query role=\"request\" startPage=\"1\" />\n  <entry>\n    <title>NDVI</title>\n    <link rel=\"alternate\" href=\"http://www.exmaple.com/api/1.0/processes/NDVI\"/>\n    <id>urn:uuid:1223c695-cfb8-4ebb-aaaa-80da344efa6a</id>\n    <updated>2018-01-18T10:30:00Z</updated>\n    <summary type=\"text\">Computes the normalized difference vegetation index (NDVI) for all pixels of the input dataset.</summary>\n  </entry>\n  <entry>\n    <title>median_time</title>\n    <link rel=\"alternate\" href=\"http://www.exmaple.com/api/1.0/data/median_time\"/>\n    <id>urn:uuid:1224c695-cfc8-4ebb-bbbb-90da344efa6b</id>\n    <updated>2018-01-18T10:30:00Z</updated>\n    <summary type=\"text\">Applies median aggregation to pixel time series for all bands of the input dataset.</summary>\n  </entry>\n</feed>"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/processes/{process_id}": {
      "parameters": [
        {
          "name": "process_id",
          "in": "path",
          "type": "string",
          "description": "process identifier string such as `NDVI`",
          "required": true
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns further information on a given EO process available at the back-end.",
        "description": "The request will ask the back-end for further details about a process specified by identifier",
        "tags": [
          "Process Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with metadata of the EO process.",
            "schema": {
              "$ref": "#/definitions/process_description"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": {
                "process_id": "median_time",
                "description": "Applies median aggregation to pixel time series for all bands of the input dataset.",
                "args": {
                  "A": {
                    "description": "input product (time series)"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "Process with specified identifier is not available"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/auth/verify": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Check whether the user is registered with the specified credentials at the back-end.",
        "description": "***Work in progress.** The general authentication procedure is to be defined and will probably change in the future.*\nThis request simply checks whether the provided HTTP `Authorization` header refers to a valid user at the back-end and returns his/her internal user ID. It is not needed to call login before sending any other API request, which will also expect the HTTP `Authorization` header if needed. Back-ends that do not require authentication such as a local file-based implementation may always return a generic user ID such as `me`",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "User ID of the user that refers to the provided HTTP `Authorization` header. ",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "text/plain; charset=utf-8": "b34ba2bdf9ac9ee1"
            }
          },
          "403": {
            "description": "Login failed"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/processes": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Lists user-defined processes.",
        "description": "This service lists all processes of the user that are stored at the back-end.",
        "tags": [
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array with process_ids",
            "examples": {
              "application/json": [
                "57d7e8ff91a1134",
                "12bd7584efa1236"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "post": {
        "summary": "Submits a new process graph and returns a unqiue identifier.",
        "description": "Creates a unique resource for a provided process graph that can be reused in other process graphs.",
        "tags": [
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "process_graph",
            "in": "body",
            "required": true,
            "description": "Description of one or more (chained) processes including their input arguments",
            "schema": {
              "$ref": "#/definitions/process_graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with process graph identifier",
            "examples": {
              "application/json": {
                "process_graph_id": "57d7e8ff91a1134"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/processes/{process_graph_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        },
        {
          "$ref": "#/parameters/process_graph_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Get a process graph by id.",
        "description": "Returns a JSON processs graph from its id.",
        "tags": [
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON object with process graph",
            "schema": {
              "$ref": "#/definitions/process_graph"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "Process graph with given id is not available"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "put": {
        "summary": "Replaces a process graph.",
        "description": "Replaces a process graph, but maintains the identifier.",
        "tags": [
          "User Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "process_graph",
            "in": "body",
            "required": true,
            "description": "Description of one or more (chained) processes including their input arguments",
            "schema": {
              "$ref": "#/definitions/process_graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The process graph has been replaced successfully.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "delete": {
        "summary": "Deletes a process graph with given id.",
        "description": "Returns a JSON processs graph from its ID.",
        "tags": [
          "User Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully deleted",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "boolean",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "Process graph with given id is not available"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/execute": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "post": {
        "summary": "Execute a process graph synchronously.",
        "description": "Process graphs will be executed directly and the result will be downloaded in the specified format. The process graph must be specified either directy in the request body or by its URI as query parameter",
        "tags": [
          "Result Access",
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [],
        "parameters": [
          {
            "name": "process_graph",
            "in": "body",
            "description": "Description of one or more (chained) processes including their input arguments",
            "schema": {
              "$ref": "#/definitions/process_graph"
            }
          },
          {
            "name": "graph",
            "in": "query",
            "type": "string",
            "description": "URI of the process graph",
            "required": false
          },
          {
            "$ref": "#/parameters/output_format"
          }
        ],
        "responses": {
          "200": {
            "description": "Result data in the specified output format",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "406": {
            "$ref": "#/responses/format_not_supported"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/services": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "post": {
        "summary": "Publish an interactive web service.",
        "description": "Calling this endpoint will enable to access results of a job as a web service such as WMTS, TMS or WCS. Depending on the specified job the service bases on pre-computed data (batch job) or needs to compute them on demand (lazy job). For lazy jobs the evaluation should pe performed in the sense that it is only evaluated for the requested spatial / temporal extent and resolution.",
        "tags": [
          "Services",
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "The base data for the service to create",
            "schema": {
              "type": "object",
              "required": [
                "job_id",
                "service_type"
              ],
              "properties": {
                "job_id": {
                  "$ref": "#/definitions/job_id"
                },
                "service_type": {
                  "$ref": "#/definitions/service_type"
                },
                "service_args": {
                  "$ref": "#/definitions/service_args"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created service",
            "schema": {
              "$ref": "#/definitions/service"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/services/types": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns service types supported by the back-end.",
        "description": "The request will ask the back-end for supported service types, e.g. wms, tms, wmts or wcs. The response is an array of available services.",
        "tags": [
          "Services",
          "Service Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of implemented API endpoints",
            "schema": {
              "example": [
                "tms",
                "wcs",
                "wms",
                "wmts"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/services/{service_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/service_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "patch": {
        "summary": "Modifies a web service.",
        "description": "***Reserved for later use.** A protocol to modify a service is to be defined.*\nCalling this endpoint will change the specified web service, but maintain its identifier.",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "The data to change for the spcified service",
            "schema": {
              "type": "object",
              "required": [
                "job_id",
                "type"
              ],
              "properties": {
                "service_args": {
                  "$ref": "#/definitions/service_args"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changes to the service applied successfully.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A service with the given id is not available."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "get": {
        "summary": "Get service information by id.",
        "description": "Requests to this endpoint will return JSON description of the service.",
        "tags": [
          "Services",
          "Result Access"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Details of the created service",
            "schema": {
              "$ref": "#/definitions/service"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A service with the given id is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "delete": {
        "summary": "Stop a given service by id",
        "description": "Calling this endpoint will stop a given web service to access result data.",
        "tags": [
          "Services"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The service has been successfully deleted.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A service with given id is not available"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "post": {
        "summary": "Submits a new job to the back-end.",
        "description": "Creates a new job from one or more (chained) processes at the back-end. Jobs are initially always lazy jobs and will not run the computations until on demand  requests or separately queueing it. Queueing it converts a lazy job to a batch job.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "process_graph",
            "in": "body",
            "description": "Description of one or more (chained) processes including their input arguments",
            "schema": {
              "$ref": "#/definitions/process_graph"
            }
          },
          {
            "name": "graph",
            "in": "query",
            "type": "string",
            "description": "URI of the process graph",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created job",
            "schema": {
              "$ref": "#/definitions/job_meta"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "put": {
        "summary": "Replaces a job at the back-end.",
        "description": "***Reserved for later use.** A protocol to modify a job is to be defined.*\nReplaces an existing job at the back-end but maintains the identifier. All running calculations are stopped if possible.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "process_graph",
            "in": "body",
            "description": "Description of one or more (chained) processes including their input arguments",
            "schema": {
              "$ref": "#/definitions/process_graph"
            }
          },
          {
            "name": "graph",
            "in": "query",
            "type": "string",
            "description": "URI of the process graph",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Changes to the job applied successfully.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "423": {
            "description": "The job is currently running and could not be canceled by the back-end."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "get": {
        "summary": "Returns information about a submitted job.",
        "description": "Returns detailed information about a submitted job including its current status and the underlying process graph",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Full job information.",
            "schema": {
              "$ref": "#/definitions/job_full"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}/subscribe": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Subscribes to job execution updates that are communicated over WebSockets.",
        "description": "***Reserved for later use.** The WebSocket-based protocol communicating the job updates is to be defined.*",
        "schemes": [
          "wss"
        ],
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Upgrade",
            "in": "header",
            "type": "string",
            "enum": [
              "websocket"
            ],
            "description": "WebSocket handshake request header",
            "required": true
          },
          {
            "name": "Connection",
            "in": "header",
            "type": "string",
            "enum": [
              "Upgrade"
            ],
            "description": "WebSocket handshake request header",
            "required": true
          },
          {
            "name": "Sec-WebSocket-Key",
            "in": "header",
            "type": "string",
            "description": "WebSocket handshake request header",
            "required": true
          },
          {
            "name": "Sec-WebSocket-Protocol",
            "in": "header",
            "type": "string",
            "enum": [
              "job_subscribe"
            ],
            "description": "WebSocket handshake request header",
            "required": true
          },
          {
            "name": "Sec-WebSocket-Version",
            "in": "header",
            "type": "number",
            "enum": [
              13
            ],
            "description": "WebSocket handshake request header",
            "required": true
          }
        ],
        "responses": {
          "101": {
            "description": "Successful subscription to job updates returns in a protocol change to a web socket connection."
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}/queue": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        },
        {
          "$ref": "#/parameters/output_format"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          },
          "406": {
            "$ref": "#/responses/format_not_supported"
          }
        }
      },
      "get": {
        "summary": "Running a job in batch mode.",
        "description": "This request converts a job into a batch job and queues it for execution. A paused job can be resumed with this request.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully queued.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "410": {
            "description": "Job with specified identifier can't be resumed."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}/pause": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Pausing a batch job.",
        "description": "This request pauses a batch job. Execution is stopped, but might be resumed later by queueing it again. Intermediate results are stored for resuming. This job won't generate additional costs for processing.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully paused.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "428": {
            "description": "Job with specified identifier is queued or is not running."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}/cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Cancels any back-end computations of a job",
        "description": "For batch jobs this request cancels all related computations at the back-end. Lazy jobs will not respond to any further on demand requests, e.g. download calls or service requests. This job won't generate additional costs for processing unless started again using `GET /jobs/{job_id}/queue` (for batch jobs) or updated using `PATCH /jobs`. Results of batch jobs might be discarded and deleted by the back-end. Any service associated with this job might be deleted from the back-end.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully canceled",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/jobs/{job_id}/download": {
      "parameters": [
        {
          "$ref": "#/parameters/job_id"
        },
        {
          "$ref": "#/parameters/output_format"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          },
          "406": {
            "$ref": "#/responses/format_not_supported"
          }
        }
      },
      "get": {
        "summary": "Request download links for results of batch jobs.",
        "description": "This request will provide links to download results of batch jobs. Depending on the Content-Type header, the response is either a simple JSON array with URLs as strings or a metalink XML document.",
        "tags": [
          "Result Access"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json",
          "application/metalink+xml"
        ],
        "responses": {
          "200": {
            "description": "Valid download links have been returned. The download links doesn't necessarily need to be located under the API base url.",
            "examples": {
              "application/json": [
                "https://openeo.org/api/v0/download/583fba8b2ce/1.tif",
                "https://openeo.org/api/v0/download/583fba8b2ce/2.tif"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "A job with the specified identifier is not available."
          },
          "410": {
            "description": "Job with specified identifier has been canceled."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/files": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "List user-uploaded files.",
        "description": "This service lists all user-uploaded files that are stored at the back-end.",
        "tags": [
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Flattened file tree with path relative to the user's root directory and some basic properties such as the file size and the timestamp of the last modification. All properties except the name are optional.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Path to the file"
                  },
                  "size": {
                    "type": "integer",
                    "description": "File size in bytes"
                  },
                  "modified": {
                    "type": "string",
                    "description": "Date and time the file has been modified at last in ISO8601 format"
                  }
                },
                "additionalProperties": true
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": [
                {
                  "name": "test.txt",
                  "size": 182,
                  "modified": "2015-10-20T17:22:10Z"
                },
                {
                  "name": "test.tif",
                  "size": 183142,
                  "modified": "2017-01-01T09:36:18Z"
                },
                {
                  "name": "Sentinel2/S2A_MSIL1C_20170819T082011_N0205_R121_T34KGD_20170819T084427.zip",
                  "size": 4183353142,
                  "modified": "2018-01-03T10:55:29Z"
                }
              ]
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "User with specified user id is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/files/{path}": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        },
        {
          "$ref": "#/parameters/file_path"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Download a user file.",
        "description": "This service downloads a user files identified by its path relative to the user's root directory.",
        "tags": [
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "file from user storage",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "File or user with specified identifier is not available"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      },
      "put": {
        "summary": "Upload a new or update an existing user file.",
        "description": "This service uploads a new or updates an existing file at a given path.",
        "tags": [
          "User Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/user_id"
          },
          {
            "$ref": "#/parameters/file_path"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "file to upload",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The file upload has been successful.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "User with specified identifier is not available."
          },
          "422": {
            "description": "File is rejected."
          },
          "423": {
            "description": "The file that is being accessed is locked."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          },
          "507": {
            "description": "User exceeded his storage limit."
          }
        }
      },
      "delete": {
        "summary": "Deletes a user file.",
        "description": "This service deletes an existing user-uploaded file specified by its path.",
        "tags": [
          "User Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/user_id"
          },
          {
            "$ref": "#/parameters/file_path"
          }
        ],
        "responses": {
          "200": {
            "description": "The file has been successfully deleted at the back-end.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "File or user with specified identifier is not available."
          },
          "423": {
            "description": "The file that is being accessed is locked."
          },
          "500": {
            "$ref": "#/responses/server_error"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/jobs": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "List all jobs that have been submitted by the user.",
        "description": "Requests to this service will list all jobs submitted by a user with given id.",
        "tags": [
          "Job Management",
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of job descriptions",
            "schema": {
              "description": "Array of job descriptions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/job_meta"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "User with specified identifier is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/services": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "List all running services that have been submitted by the user.",
        "description": "Requests to this endpoint will list all running services submitted by a user with given id.",
        "tags": [
          "Services",
          "User Content"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of service descriptions",
            "schema": {
              "description": "Array of service descriptions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/service"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "User with specified identifier is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/users/{user_id}/credits": {
      "parameters": [
        {
          "$ref": "#/parameters/user_id"
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns available user credits.",
        "description": "***Reserved for later use.** The credit system and payment procedures are to be defined.*\nFor back-ends that involve accounting, this service will return the currently available credits. Other back-ends may simply return `Infinity`",
        "tags": [
          "User Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "Available credits",
            "schema": {
              "description": "Available credits",
              "type": "number"
            },
            "examples": {
              "text/plain": "210"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "User with specified identifier is not available."
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/udf_runtimes": {
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns the programming languages including their environments and UDF types supported.",
        "description": "Describes how custom user-defined functions can be exposed to the data and which programming languages and environments are supported by the back-end.",
        "tags": [
          "UDF Runtime Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Description of UDF runtime support",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "A map with language identifiers such as `R` as keys and an object that defines available versions, extension packages, and UDF schemas.",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "udf_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/udf_type"
                      }
                    },
                    "versions": {
                      "type": "object",
                      "description": "A map with version identifiers as keys and an object value that specifies which extension packages are available for the particular version.",
                      "additionalProperties": {
                        "description": "Extension package identifiers that should include their version number such as `'sf__0.5-4'`",
                        "properties": {
                          "packages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "R": {
                  "udf_types": [
                    "reduce_time",
                    "reduce_space",
                    "apply_pixel"
                  ],
                  "versions": {
                    "3.1.0": {
                      "packages": [
                        "Rcpp_0.12.10",
                        "sp_1.2-5",
                        "rmarkdown_1.6"
                      ]
                    },
                    "3.3.3": {
                      "packages": [
                        "Rcpp_0.12.10",
                        "sf_0.5-4",
                        "spacetime_1.2-0"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "501": {
            "$ref": "#/responses/not_implemented"
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    },
    "/udf_runtimes/{lang}/{udf_type}": {
      "parameters": [
        {
          "name": "lang",
          "in": "path",
          "description": "Language identifier such as `R`",
          "type": "string",
          "enum": [
            "python",
            "R"
          ],
          "required": true
        },
        {
          "name": "udf_type",
          "in": "path",
          "type": "string",
          "description": "The UDF types define how UDFs can be exposed to the data, how they can be parallelized, and how the result schema should be structured.",
          "enum": [
            "apply_pixel",
            "apply_scene",
            "reduce_time",
            "reduce_space",
            "window_time",
            "window_space",
            "window_spacetime",
            "aggregate_time",
            "aggregate_space",
            "aggregate_spacetime"
          ],
          "required": true
        }
      ],
      "options": {
        "summary": "Response to allow Cross-Origin Resource Sharing.",
        "description": "Response for the preflight requests made by some clients due to Cross-Origin Resource Sharing restrictions. It sends the appropriate headers for this endpoint as defined in the section \"Responses\". See https://www.w3.org/TR/cors/ for more information.",
        "tags": [
          "CORS"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/cors_options"
          },
          "405": {
            "$ref": "#/responses/method_not_allowed"
          }
        }
      },
      "get": {
        "summary": "Returns the process description of UDF schemas.",
        "description": "Returns the process description of UDF schemas, which offer different possibilities how user-defined scripts can be applied to the data.",
        "tags": [
          "UDF Runtime Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Process description",
            "schema": {
              "$ref": "#/definitions/udf_description"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "Allowed origin of the request, usually `*`",
                "default": "*"
              },
              "Access-Control-Allow-Credentials": {
                "type": "string",
                "description": "If authorization is implemented by the back-end it needs to be set to `true`",
                "default": "true"
              }
            },
            "examples": {
              "application/json": {
                "process_id": "/udf/R/reduce_time",
                "description": "Applies the given R script on all time series of the input imagery. The R script gets pixel values (all bands) of complete time series as input and must result in a single value or tuple for multiple bands.",
                "args": {
                  "imagery": {
                    "description": "input image time series"
                  },
                  "script": {
                    "description": "R script that will be applied over time series"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/auth_required"
          },
          "403": {
            "$ref": "#/responses/access_denied"
          },
          "404": {
            "description": "UDF type with specified identifier is not available"
          },
          "501": {
            "description": "This API feature, language or UDF type is not supported by the back-end."
          },
          "503": {
            "$ref": "#/responses/unavailable"
          }
        }
      }
    }
  }
}