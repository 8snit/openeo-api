{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://localhost/api/{version}/",
      "description": "The URL of the API MAY freely be chosen by the back-end providers. The path, including API versioning, is a *recommendation* only. Nevertheless, all servers MUST support HTTPS as the authentication methods are not secure with HTTP only!",
      "variables": {
        "version": {
          "default": "v0",
          "description": "API versioning is RECOMMENDED. It MUST not be used by the clients to detect the version number of the API. Use the version number returned from `GET /` instead."
        }
      }
    }
  ],
  "info": {
    "title": "OpenEO API",
    "version": "0.3.0",
    "description": "The OpenEO API specification for interoperable cloud-based processing of large Earth observation datasets.\n \n**Make sure to take account of several global API specifications** in the 'General API Concept Description', which are not (fully) covered in this specification. Particularly with regard to:\n * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.3.0/cors/index.html) to allow browser-based access to the API\n * [Error handling](https://open-eo.github.io/openeo-api/v/0.3.0/errors/index.html)\n\n**Please note:** This version is still incomplete and intended for working on prototypes. Check the [issue tracker](https://github.com/Open-EO/openeo-api/issues) for more information. Additionally, the rendered version of the specification is not complete especiially regarding examples due to incomplete OpenAPI 3.0 support of SwaggerUI. For all details see the specification file itself.",
    "contact": {
      "name": "openEO Consortium",
      "url": "http://www.openeo.org",
      "email": "openeo@list.tuwien.ac.at"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "General API Concept Description",
    "url": "https://open-eo.github.io/openeo-api/v/0.3.0/"
  },
  "tags": [
    {
      "name": "Capabilities",
      "description": "General information about the API implementation and other supported capabilities at the back-end."
    },
    {
      "name": "EO Data Discovery",
      "description": "Discovery of Earth observation datasets that are available at the back-end."
    },
    {
      "name": "Process Discovery",
      "description": "Discovery of processes that are available at the back-end."
    },
    {
      "name": "Authentication",
      "description": "Authentication of users."
    },
    {
      "name": "File Management",
      "description": "Services to manage assets."
    },
    {
      "name": "Process Graph Management",
      "description": "Services to manage process graphs."
    },
    {
      "name": "Job Management",
      "description": "Services to manage batch processing tasks (jobs) and their results."
    },
    {
      "name": "Web Service Management",
      "description": "Management of web-services that process required on demand."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Supported features and other general information about the back-end.",
        "description": "The request will ask the back-end which version and endpoints of the openEO API are supported. Also lists available billing plans.",
        "tags": [
          "Capabilities"
        ],
        "responses": {
          "200": {
            "description": "Information about the API version and supported endpoints / features.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "version",
                    "endpoints"
                  ],
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "Version number of the openEO specification this server works with.",
                      "example": "0.3.0"
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "path",
                          "methods"
                        ],
                        "properties": {
                          "path": {
                            "description": "Path to the endpoint, starting from the base url of the API. MUST contain a leading slash, *must not* contain a trailing slash. Variables in the paths must be placed in curly braces, e.g. `{process_id}`, and have a self-speaking name. It is RECOMMENDED that the path variable names fully follow the API specification.",
                            "type": "string"
                          },
                          "methods": {
                            "description": "Supported HTTP verbs in uppercase. It is not required to list OPTIONS as method (see the documentation regarding CORS).",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PATCH",
                                "PUT",
                                "DELETE"
                              ]
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "path": "/data",
                          "methods": [
                            "GET"
                          ]
                        },
                        {
                          "path": "/data/{data_id}",
                          "methods": [
                            "GET"
                          ]
                        },
                        {
                          "path": "/jobs",
                          "methods": [
                            "GET",
                            "POST"
                          ]
                        },
                        {
                          "path": "/jobs/{job_id}",
                          "methods": [
                            "GET",
                            "DELETE",
                            "PATCH"
                          ]
                        }
                      ]
                    },
                    "billing": {
                      "description": "Billing related data, e.g. the currency used or available plans to process jobs. MUST be specified if the back-end uses any billing related functionalities, e.g. budgeting, estimates.",
                      "type": "object",
                      "required": [
                        "currency"
                      ],
                      "properties": {
                        "currency": {
                          "description": "The currency the back-end is billing in. The currency MUST be either a valid currency code as defined in ISO-4217 or a proprietary currency, e.g. tiles or back-end specific credits.",
                          "type": "string",
                          "example": "USD"
                        },
                        "plans": {
                          "description": "Array of plans",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "description"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the plan.",
                                "example": "free"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description that gives a rough overview over the plan.",
                                "example": "Free plan. Calculates one tile per second and a maximum amount of 100 tiles per hour."
                              },
                              "url": {
                                "type": "string",
                                "description": "URL to a web page with more details about the plan.",
                                "format": "url",
                                "example": "http://openeo.org/plans/free-plan"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.API.getCapabilities().then(capabilitiesObj => {\n  // ...\n});"
          },
          {
            "lang": "Python",
            "source": "import openeo\nsession = openeo.session(\"username\", endpoint=\"https://backend-provider.com/api/v0\")\nsession.list_capabilities()"
          },
          {
            "lang": "R",
            "source": "library(openeo)\nsession = connect(\"https://backend-provider.com/api/v0\")\nsession %>% listCapabilities()"
          }
        ]
      }
    },
    "/output_formats": {
      "get": {
        "summary": "List supported output formats.",
        "description": "The request will ask the back-end for supported output formats, e.g.\nPNG, GTiff and JSON, and its default output format. The response\nis an object of the default and all available output formats and their\noptions. This does not include the supported web services.\n\n**Note**: Output format names and options SHOULD be fully aligned with\nthe GDAL codes if available, see [GDAL Raster\nFormats](http://www.gdal.org/formats_list.html) and [OGR\nVector Formats](http://www.gdal.org/ogr_formats.html). It is OPTIONAL to\nsupport all output format options supported by GDAL. Some file formats\nnot available through GDAL could be defined centrally for openEO. Custom\noutput formats or options MAY be defined, but it is recommended to stick\nto GDAL to increase interoperability.\n\nA `JSON` file format MAY be supported by back-ends to allow outputting\ndata that doesn't fit into raster or vector file formats. ",
        "tags": [
          "Capabilities",
          "Job Management"
        ],
        "responses": {
          "200": {
            "description": "An object with the default output format and a map containing all output format names as keys and an object that defines supported paramaters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "default",
                    "formats"
                  ],
                  "properties": {
                    "default": {
                      "type": "string",
                      "example": "GTiff"
                    },
                    "formats": {
                      "type": "object",
                      "description": "List of supported output formats.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Named parameters for this output format.",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      },
                      "example": {
                        "GTiff": {
                          "tiled": {
                            "type": "boolean",
                            "description": "This option can be used to force creation of tiled TIFF files [true]. By default [false] stripped TIFF files are created.",
                            "default": false
                          },
                          "compress": {
                            "type": "string",
                            "description": "Set the compression to use.",
                            "default": "none",
                            "enum": [
                              "JPEG",
                              "LZW",
                              "DEFLATE",
                              "NONE"
                            ]
                          },
                          "photometric": {
                            "type": "string",
                            "description": "Set the photometric interpretation tag.",
                            "enum": [
                              "MINISBLACK",
                              "MINISWHIT",
                              "RGB",
                              "CMYK",
                              "YCBCR",
                              "CIELAB",
                              "ICCLAB",
                              "ITULAB"
                            ],
                            "default": "RGB"
                          },
                          "jpeg_quality": {
                            "type": "integer",
                            "description": "Set the JPEG quality when using JPEG.",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 75
                          }
                        },
                        "PNG": {
                          "worldfile": {
                            "type": "boolean",
                            "description": "Force the generation of an associated ESRI world file.",
                            "default": false
                          }
                        },
                        "JSON": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.API.getOutputFormats().then(outputFormats => {\n  // ...\n});"
          },
          {
            "lang": "Python",
            "source": "session.get_outputformats()"
          },
          {
            "lang": "R",
            "source": "session %>% listFormats()"
          }
        ]
      }
    },
    "/data": {
      "get": {
        "summary": "List available EO datasets.",
        "description": "Requests will ask the back-end for available data and will return an array of available datasets with very basic information such as their unique identifiers. Results can be filtered by space, time, and dataset name with very simple search expressions.",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of EO datasets including their unique identifiers and some basic metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "data_id",
                      "description"
                    ],
                    "properties": {
                      "data_id": {
                        "$ref": "#/components/schemas/data_id"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description"
                      },
                      "source": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": true
                  },
                  "example": [
                    {
                      "data_id": "MOD09Q1",
                      "description": " MODIS/Terra Surface Reflectance 8-Day L3 Global 250m SIN Grid V006",
                      "source": "U.S. Geological Survey (USGS), DOI: 10.5067/MODIS/MOD09Q1.006"
                    },
                    {
                      "data_id": "SENTINEL2-1C",
                      "description": "Sentinel 2 Level-1C: Top-of-atmosphere reflectances in cartographic geometry",
                      "source": "European Space Agency (ESA)"
                    },
                    {
                      "data_id": "LandsatETMPlus",
                      "description": "Landsat Enhanced Thematic Mapper Plus (ETM+)",
                      "source": "U.S. Geological Survey (USGS)"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.Data.get().then(datasets => {\n  // ...\n});"
          },
          {
            "lang": "Python",
            "source": "session.list_collections()"
          },
          {
            "lang": "R",
            "source": "session %>% listCollections()"
          }
        ]
      }
    },
    "/data/{data_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/data_id"
        }
      ],
      "get": {
        "summary": "Full information about a specific EO dataset.",
        "description": "The request will ask the back-end for further details about a dataset specified by the identifier `data_id`",
        "tags": [
          "EO Data Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with metadata of the EO dataset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data_id",
                    "description",
                    "extent",
                    "bands"
                  ],
                  "properties": {
                    "data_id": {
                      "$ref": "#/components/schemas/data_id"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "links": {
                      "description": "Additional links related to this EO dataset. Could reference to other meta data formats with additional information or a preview image.",
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/link"
                      }
                    },
                    "source": {
                      "type": "string"
                    },
                    "extent": {
                      "$ref": "#/components/schemas/spatial_extent"
                    },
                    "time": {
                      "$ref": "#/components/schemas/temporal_extent"
                    },
                    "bands": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/band_description"
                      }
                    }
                  },
                  "additionalProperties": true,
                  "example": {
                    "data_id": "Sentinel-2A-L1C",
                    "description": "Sentinel 2 Level-1C: Top-of-atmosphere reflectances in cartographic geometry",
                    "source": "European Space Agency (ESA)",
                    "extent": {
                      "crs": "EPSG:4326",
                      "left": -34,
                      "right": 35,
                      "bottom": 39,
                      "top": 71
                    },
                    "time": {
                      "from": "2016-01-01",
                      "to": "2017-10-01"
                    },
                    "bands": [
                      {
                        "band_id": "1",
                        "wavelength_nm": 443.9,
                        "res_m": 60,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "2",
                        "name": "blue",
                        "wavelength_nm": 496.6,
                        "res_m": 10,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "3",
                        "name": "green",
                        "wavelength_nm": 560,
                        "res_m": 10,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "4",
                        "name": "red",
                        "wavelength_nm": 664.5,
                        "res_m": 10,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "5",
                        "wavelength_nm": 703.9,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "6",
                        "wavelength_nm": 740.2,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "7",
                        "wavelength_nm": 782.5,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "8",
                        "name": "nir",
                        "wavelength_nm": 835.1,
                        "res_m": 10,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "8a",
                        "wavelength_nm": 864.8,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "9",
                        "wavelength_nm": 945,
                        "res_m": 60,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "10",
                        "wavelength_nm": 1373.5,
                        "res_m": 60,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "11",
                        "wavelength_nm": 1613.7,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      },
                      {
                        "band_id": "12",
                        "wavelength_nm": 2202.4,
                        "res_m": 20,
                        "scale": 0.0001,
                        "offset": 0,
                        "type": "int16",
                        "unit": "1"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.Data.getById(\"Sentinel-2B\").then(data => {\n  // ...\n});"
          },
          {
            "lang": "Python",
            "source": "session.get_collection(\"Sentinel-2B\")"
          },
          {
            "lang": "R",
            "source": "session %>% describeCollection(\"Sentinel-2B\")"
          }
        ]
      }
    },
    "/processes": {
      "get": {
        "summary": "List supported processes.",
        "description": "The request asks the back-end for available processes and returns detailed process descriptions, including parameters and return values. Processes are described using the Functio specification for language-agnostic process descriptions.",
        "tags": [
          "Process Discovery"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "externalDocs": {
          "description": "Functio specification, version 0.1.0 (or any newer patch version).",
          "url": "https://github.com/m-mohr/functio-spec/blob/master/versions/0.1.0/spec.md"
        },
        "responses": {
          "200": {
            "description": "Functio document describing the supported processes.",
            "content": {
              "application/json": {
                "schema": {
                  "externalDocs": {
                    "description": "Functio specification, version 0.1.0 (or any newer patch version).",
                    "url": "https://github.com/m-mohr/functio-spec/blob/master/versions/0.1.0/spec.md"
                  }
                },
                "examples": {
                  "functioSpecExample": {
                    "externalValue": "https://raw.githubusercontent.com/m-mohr/functio-spec/master/versions/0.1.0/example.json"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.Processes.get().then(processes => {\n  // ...\n});"
          },
          {
            "lang": "Python",
            "source": "session.get_all_processes()"
          },
          {
            "lang": "R",
            "source": "session %>% listProcesses()"
          }
        ]
      }
    },
    "/credentials/oidc": {
      "get": {
        "summary": "Authentication with OpenID Connect.",
        "description": "This endpoint redirects to the [OpenID Connect discovery](http://openid.net/specs/openid-connect-discovery-1_0.html) document, which is usually located at `https://{{domain}}/.well-known/openid-configuration` and provides all information required to authenticate using [OpenID Connect](http://openid.net/connect/). It is highly RECOMMENDED to implement OpenID Connect for public services in favor of Basic authentication.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {}
        ],
        "responses": {
          "303": {
            "description": "Specifies the location of the OpenID Connect discovery document.",
            "headers": {
              "Location": {
                "required": true,
                "schema": {
                  "type": "string",
                  "example": "https://openeo.org/.well-known/openid-configuration"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/credentials/basic": {
      "get": {
        "summary": "Authentication with HTTP Basic.",
        "description": "This request checks whether the credentials provided in the HTTP Basic header are valid. Returns the user ID and a bearer token for for authorization in subsequent API calls. It is RECOMMENDED to implement this authentication method for non-public services only.",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "Basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials are correct and authentication succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user_id",
                    "access_token"
                  ],
                  "properties": {
                    "user_id": {
                      "description": "A unique identifier for the user, which is used for subsequent files to its own files, e.g. in the file management endpoint at `/files/{user_id}`.",
                      "type": "string",
                      "example": "sampleuser123"
                    },
                    "access_token": {
                      "description": "An access token that is used for subsequent calls to the API as Bearer token in the `Authorization` header.",
                      "type": "string",
                      "example": "b34ba2bdf9ac9ee1"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/validation": {
      "post": {
        "summary": "Validate a process graph.",
        "description": "Validates a process graph without executing it. Checks whether the process graph is schematically correct and the processes are supported by the back-end. It also checks the parameter values against the schema, but MAY not check the values are adequate in the context of data. For example, a non-existing band name may not get rejected. Errors that occur during processing MAY not get reported, too. An example could be a division by zero.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Confirms that the process graph is valid"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph to be validated."
        }
      }
    },
    "/preview": {
      "post": {
        "summary": "Process and download EO data synchronously.",
        "description": "Process graphs will be executed directly and the result will be downloaded in the specified format. Requests might time-out after a certain amount of time by sending error code 408. A `OpenEO-Costs` header MAY be sent with all responses. This endpoint could be used especially to generate small previews or  test process graphs before starting a batch job.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Result data in the specified output format",
            "headers": {
              "Content-Type": {
                "description": "The appropriate mime type for the requested output format must be sent.",
                "schema": {
                  "type": "string"
                }
              },
              "OpenEO-Costs": {
                "$ref": "#/components/schemas/money"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "description": "Specifies the job details, e.g. the process graph and the output format.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_graph",
                  "output"
                ],
                "properties": {
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "output": {
                    "$ref": "#/components/schemas/output_format"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/process_graphs": {
      "get": {
        "summary": "List all user-specific process graphs.",
        "description": "This service lists all process graphs of the authenticated user that are stored at the back-end.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array with stored process graph meta data",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of stored process graphs",
                  "type": "array",
                  "items": {
                    "description": "Defines limited metadata of stored process graphs that have been submitted by users.",
                    "type": "object",
                    "required": [
                      "process_graph_id"
                    ],
                    "properties": {
                      "process_graph_id": {
                        "$ref": "#/components/schemas/process_graph_id"
                      },
                      "title": {
                        "$ref": "#/components/schemas/title"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Store a new process graph.",
        "description": "Creates a unique resource for a provided process graph that can be reused in other process graphs.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph with its meta data."
        }
      }
    },
    "/process_graphs/{process_graph_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/process_graph_id"
        }
      ],
      "get": {
        "summary": "Full information about a process graph.",
        "description": "Returns all information about a process graph.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object with process graph",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Defines full metadata of stored process graphs that have been submitted by users.",
                  "type": "object",
                  "required": [
                    "process_graph_id",
                    "process_graph"
                  ],
                  "properties": {
                    "process_graph_id": {
                      "$ref": "#/components/schemas/process_graph_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "patch": {
        "summary": "Modify a process graph.",
        "description": "Replaces a process graph or modifies the title, but maintains the identifier.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The process graph data has been updated successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  }
                }
              }
            }
          },
          "description": "Specifies the process graph with a title."
        }
      },
      "delete": {
        "summary": "Delete a process graph.",
        "tags": [
          "Process Graph Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The process graph has been successfully deleted"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/service_types": {
      "get": {
        "summary": "List supported web service protocols.",
        "description": "The request will ask the back-end for supported web service protocols, e.g. WMS or WCS. The response is an object of all available web service protocols, including their parameters and attributes.\nParameters is input that needs to be defined upon creation of a web service. Attributes are computed values that are defined by the web service during creation and based on the parameters, e.g. available layers for a WMS based on the bands in the underlying GeoTiff.\nTo improve interoperability between back-ends common names for the web services SHOULD be used, e.g. the abbreviations used in the official [OGC Schema Repository](http://schemas.opengis.net/) for the respective web services.",
        "tags": [
          "Capabilities",
          "Web Service Management"
        ],
        "responses": {
          "200": {
            "description": "An object with a map containing all web service names as keys and an  object that defines supported paramaters and attributes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of supported web services.",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "parameters": {
                        "type": "object",
                        "description": "List of parameters.",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "description": "List of attributes.",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/argument"
                        }
                      }
                    }
                  },
                  "example": {
                    "WMS": {
                      "parameters": {
                        "version": {
                          "type": "string",
                          "description": "The WMS version to use.",
                          "default": "1.3.0",
                          "enum": [
                            "1.1.1",
                            "1.3.0"
                          ]
                        }
                      },
                      "attributes": {
                        "layers": {
                          "type": "array",
                          "description": "Array of layer names.",
                          "example": [
                            "roads",
                            "countries",
                            "water_bodies"
                          ]
                        }
                      }
                    },
                    "WFS": {
                      "parameters": {
                        "version": {
                          "type": "string",
                          "description": "The WFS version to use.",
                          "default": "2.0.0",
                          "enum": [
                            "1.0.0",
                            "1.1.0",
                            "2.0.0"
                          ]
                        },
                        "maxFeatures": {
                          "type": "integer",
                          "description": "The WFS version to use (since WFS 2.0.0 only).",
                          "default": 10000,
                          "minimum": 1,
                          "maximum": 100000
                        }
                      },
                      "attributes": {
                        "typeNames": {
                          "type": "array",
                          "description": "Array of available feature type names.",
                          "example": [
                            "topp:states",
                            "topp:cities"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "x-code-samples": [
          {
            "lang": "JavaScript",
            "source": "OpenEO.Services.getCapabilities().then(supportedServices => {\n  // ...\n});"
          },
          {
            "lang": "R",
            "source": "session %>% services()"
          }
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "List all user-specific web services.",
        "description": "Requests to this endpoint will list all running web services submitted by a user with given id.",
        "tags": [
          "Web Service Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of web service descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Defines metadata of web services.",
                    "type": "object",
                    "required": [
                      "service_id",
                      "enabled",
                      "type",
                      "url",
                      "user_id"
                    ],
                    "properties": {
                      "service_id": {
                        "$ref": "#/components/schemas/service_id"
                      },
                      "title": {
                        "$ref": "#/components/schemas/title"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description"
                      },
                      "url": {
                        "$ref": "#/components/schemas/service_url"
                      },
                      "type": {
                        "$ref": "#/components/schemas/service_type"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/service_enabled"
                      },
                      "user_id": {
                        "$ref": "#/components/schemas/user_id"
                      },
                      "submitted": {
                        "$ref": "#/components/schemas/submitted"
                      },
                      "plan": {
                        "$ref": "#/components/schemas/billing_plan"
                      },
                      "costs": {
                        "$ref": "#/components/schemas/money"
                      },
                      "budget": {
                        "$ref": "#/components/schemas/budget"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Publish a new web service.",
        "description": "Calling this endpoint will create a web service such as WMTS, TMS or WCS. The underlying data is processes on-demand, but a process graph may simply access results from a batch job. Computations should be performed in the sense that it is only evaluated for the requested spatial / temporal extent and resolution.",
        "tags": [
          "Web Service Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "job_id",
                  "type"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "type": {
                    "$ref": "#/components/schemas/service_type"
                  },
                  "enabled": {
                    "$ref": "#/components/schemas/service_enabled"
                  },
                  "parameters": {
                    "$ref": "#/components/schemas/service_parameters"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "The base data for the web service to create"
        }
      }
    },
    "/services/{service_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/service_id"
        }
      ],
      "patch": {
        "summary": "Updates a web service.",
        "description": "Calling this endpoint will change the specified web service, but maintain its identifier. Changes can be grouped in a single request. To change the web service type create a new web service.",
        "tags": [
          "Web Service Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Changes to the web service applied successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "enabled": {
                    "$ref": "#/components/schemas/service_enabled"
                  },
                  "parameters": {
                    "$ref": "#/components/schemas/service_parameters"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                }
              }
            }
          },
          "description": "The data to change for the spcified web service."
        }
      },
      "get": {
        "summary": "Full information about a web service.",
        "description": "Requests to this endpoint will return JSON description of the web service.",
        "tags": [
          "Web Service Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created web service",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Metadata of a web service.",
                  "type": "object",
                  "required": [
                    "service_id",
                    "process_graph",
                    "enabled",
                    "type",
                    "url",
                    "args",
                    "user_id"
                  ],
                  "properties": {
                    "service_id": {
                      "$ref": "#/components/schemas/service_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    },
                    "url": {
                      "$ref": "#/components/schemas/service_url"
                    },
                    "type": {
                      "$ref": "#/components/schemas/service_type"
                    },
                    "enabled": {
                      "$ref": "#/components/schemas/service_enabled"
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/service_parameters"
                    },
                    "attributes": {
                      "type": "object",
                      "description": "Additional attributes a web service computes during creation of a web service depending on the input. For exmaple, this could list the available layers for a WMS. See `GET /service_types` for supported attributes.",
                      "additionalProperties": true,
                      "example": {
                        "layers": [
                          "ndvi",
                          "evi"
                        ]
                      }
                    },
                    "user_id": {
                      "$ref": "#/components/schemas/user_id"
                    },
                    "submitted": {
                      "$ref": "#/components/schemas/submitted"
                    },
                    "plan": {
                      "$ref": "#/components/schemas/billing_plan"
                    },
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Delete a web service.",
        "description": "Calling this endpoint will stop a given web service to access result data.",
        "tags": [
          "Web Service Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The web service has been successfully deleted."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "List all user-specific jobs.",
        "description": "Requests to this endpoint will list all batch jobs submitted by a user with given id.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of job descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Array of job descriptions",
                  "type": "array",
                  "items": {
                    "description": "Defines a metadata subset of betch jobs that have been submitted by users. To get the full metadata for a job including a process graph call `GET /jobs/{job_id}`",
                    "type": "object",
                    "required": [
                      "job_id",
                      "submitted",
                      "locked"
                    ],
                    "properties": {
                      "job_id": {
                        "$ref": "#/components/schemas/job_id"
                      },
                      "title": {
                        "$ref": "#/components/schemas/title"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description"
                      },
                      "user_id": {
                        "$ref": "#/components/schemas/user_id"
                      },
                      "status": {
                        "$ref": "#/components/schemas/status"
                      },
                      "submitted": {
                        "$ref": "#/components/schemas/submitted"
                      },
                      "updated": {
                        "$ref": "#/components/schemas/updated"
                      },
                      "plan": {
                        "$ref": "#/components/schemas/billing_plan"
                      },
                      "costs": {
                        "$ref": "#/components/schemas/money"
                      },
                      "budget": {
                        "$ref": "#/components/schemas/budget"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Create a new job.",
        "description": "Creates a new batch processing task (job) from one or more (chained) processes at the back-end.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/created"
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "process_graph"
                ],
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "output": {
                    "$ref": "#/components/schemas/output_format"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "description": "Specifies the job details, e.g. the process graph and _optionally_ the output format. The output format might be overridden during batch job creation and by web services."
        }
      }
    },
    "/jobs/{job_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/job_id"
        }
      ],
      "patch": {
        "summary": "Modify a job.",
        "description": "Modifies an existing job at the back-end but maintains the identifier. Changes can be grouped in a single request.\n\nJobs can only be modified when the job is not queued or running. Otherweise requests to this endpoint MUST be rejected with error code 3005.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Changes to the job applied successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "$ref": "#/components/schemas/title"
                  },
                  "description": {
                    "$ref": "#/components/schemas/description"
                  },
                  "process_graph": {
                    "$ref": "#/components/schemas/process_graph"
                  },
                  "output": {
                    "$ref": "#/components/schemas/output_format"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/billing_plan"
                  },
                  "budget": {
                    "$ref": "#/components/schemas/budget"
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "description": "Specifies the job details to update."
        }
      },
      "get": {
        "summary": "Full information about a job.",
        "description": "Returns detailed information about a submitted batch job.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Full job information.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Defines full metadata of batch jobs that have been submitted by users.",
                  "type": "object",
                  "required": [
                    "job_id",
                    "process_graph",
                    "submitted"
                  ],
                  "properties": {
                    "job_id": {
                      "$ref": "#/components/schemas/job_id"
                    },
                    "title": {
                      "$ref": "#/components/schemas/title"
                    },
                    "description": {
                      "$ref": "#/components/schemas/description"
                    },
                    "process_graph": {
                      "$ref": "#/components/schemas/process_graph"
                    },
                    "output": {
                      "$ref": "#/components/schemas/output_format"
                    },
                    "user_id": {
                      "$ref": "#/components/schemas/user_id"
                    },
                    "status": {
                      "$ref": "#/components/schemas/status"
                    },
                    "submitted": {
                      "$ref": "#/components/schemas/submitted"
                    },
                    "updated": {
                      "$ref": "#/components/schemas/updated"
                    },
                    "plan": {
                      "$ref": "#/components/schemas/billing_plan"
                    },
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Delete a job.",
        "description": "Deletes all data related to this job. Computations are stopped and computed results are deleted. This job won't generate additional costs for processing.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "The job has been successfully deleted."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs/{job_id}/estimate": {
      "get": {
        "summary": "Get an estimate for a job.",
        "description": "Clients can ask for an estimate for a batch job. Back-ends can decide to either calculate the duration or the costs or both. This MUST be the upper limit of the incurring costs. Clients can be charged less than specified, but never more. Back-end providers MAY specify an expiry time for the estimate.  Starting to process data afterwards might be charged at a higher cost.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/job_id"
          }
        ],
        "responses": {
          "200": {
            "description": "The estimated costs. At least one of credits or time MUST be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "costs": {
                      "$ref": "#/components/schemas/money"
                    },
                    "duration": {
                      "type": "string",
                      "description": "Estimated duration for the operation. Duration must be specified according to ISO 8601.",
                      "example": "P1Y2M10DT2H30M"
                    },
                    "expires": {
                      "type": "string",
                      "description": "Time the estimate is valid for. Date and time have to be specified according to ISO 8601.",
                      "example": "2020-11-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs/{job_id}/subscriptions": {
      "post": {
        "summary": "Subscribe to execution updates for a job.",
        "description": "***Reserved for later use.** The WebSocket-based protocol communicating the job updates is to be defined.*",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/job_id"
          },
          {
            "name": "Upgrade",
            "in": "header",
            "description": "WebSocket handshake request header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "websocket"
              ]
            }
          },
          {
            "name": "Connection",
            "in": "header",
            "description": "WebSocket handshake request header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Upgrade"
              ]
            }
          },
          {
            "name": "Sec-WebSocket-Key",
            "in": "header",
            "description": "WebSocket handshake request header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sec-WebSocket-Protocol",
            "in": "header",
            "description": "WebSocket handshake request header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "job_subscribe"
              ]
            }
          },
          {
            "name": "Sec-WebSocket-Version",
            "in": "header",
            "description": "WebSocket handshake request header",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                13
              ]
            }
          }
        ],
        "responses": {
          "101": {
            "description": "Successful subscription to job updates returns in a protocol change to a web socket connection."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/jobs/{job_id}/results": {
      "parameters": [
        {
          "$ref": "#/components/parameters/job_id"
        }
      ],
      "get": {
        "summary": "Download information for a completed job.",
        "description": "After finishing processing, this request will provide signed URLs to the\nprocessed files of the batch job.\n\nURL signing is a way to protect files\nfrom unauthorized access with a key instead of HTTP header based\nauthorization. The URL signing key is similar to a password and it's\ninclusion in the URL allows to download files using simple GET requests\nsupported by a wide range of programs, e.g. web browsers or download\nmanagers. Back-ends are responsible to generate the URL signing keys and\ntheir appropriate expiration. The back-end MAY indicate an\nexpiration time by sending an `Expires` header.\n\nDepending on the `Accept` header, the response is either a JSON\narray containing links or a metalink XML document.\n\nIf processing has not finished yet requests to this endpoint MUST be\nrejected with openEO error code 3006.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Valid download links have been returned. The download links doesn't necessarily need to be located under the API base url.",
            "headers": {
              "Expires": {
                "description": "Indicates the expiration time of the signed URLs contained in this document. Needs to follow the specification at https://tools.ietf.org/html/rfc2616#section-14.21",
                "schema": {
                  "type": "string",
                  "example": "Wed, 21 Oct 2018 07:28:00 GMT"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/link"
                  },
                  "example": [
                    {
                      "href": "https://openeo.org/api/v0/download/583fba8b2ce/1.tif",
                      "type": "image/tiff"
                    },
                    {
                      "href": "https://openeo.org/api/v0/download/583fba8b2ce/2.tif",
                      "type": "image/tiff"
                    }
                  ]
                }
              },
              "application/metalink+xml": {
                "examples": {
                  "response": {
                    "summary": "External metalink file as an example (no openEO related content).",
                    "externalValue": "http://releases.ubuntu.com/precise/ubuntu-12.04.5-server-amd64.metalink"
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "post": {
        "summary": "Start processing a job.",
        "description": "Adds a batch job to the processing queue to compute the results.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "202": {
            "description": "The creation of the resource has been queued successfully."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "delete": {
        "summary": "Cancel processing a job.",
        "description": "Cancels all related computations for this job at the back-end. It will stop generating additional costs for processing. A subset of processed results may be available for downloading depending on the state of the job as it was canceled. Results SHOULD not be deleted until the job is deleted or job processing is started again.",
        "tags": [
          "Job Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Processing the job has been successfully canceled."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/files/{user_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user_id"
        }
      ],
      "get": {
        "summary": "List all user-specific files.",
        "description": "This service lists all user-uploaded files that are stored at the back-end.",
        "tags": [
          "File Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Flattened file tree with path relative to the user's root directory and some basic properties such as the file size and the timestamp of the last modification. All properties except the name are optional.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Path to the file"
                      },
                      "size": {
                        "type": "integer",
                        "description": "File size in bytes"
                      },
                      "modified": {
                        "type": "string",
                        "description": "Date and time the file has been modified at last in ISO8601 format"
                      }
                    },
                    "additionalProperties": true
                  },
                  "example": [
                    {
                      "name": "test.txt",
                      "size": 182,
                      "modified": "2015-10-20T17:22:10Z"
                    },
                    {
                      "name": "test.tif",
                      "size": 183142,
                      "modified": "2017-01-01T09:36:18Z"
                    },
                    {
                      "name": "Sentinel2/S2A_MSIL1C_20170819T082011_N0205_R121_T34KGD_20170819T084427.zip",
                      "size": 4183353142,
                      "modified": "2018-01-03T10:55:29Z"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/files/{user_id}/{path}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/user_id"
        },
        {
          "$ref": "#/components/parameters/file_path"
        }
      ],
      "get": {
        "summary": "Download a file.",
        "description": "This service downloads a user files identified by its path relative to the user's root directory.",
        "tags": [
          "File Management"
        ],
        "security": [
          {},
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "file from user storage",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      },
      "put": {
        "summary": "Upload a file.",
        "description": "This service uploads a new or updates an existing file at a given path.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/file_path"
          }
        ],
        "responses": {
          "204": {
            "description": "The file upload has been successful."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        },
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a file.",
        "description": "This service deletes an existing user-uploaded file specified by its path.",
        "tags": [
          "File Management"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/file_path"
          }
        ],
        "responses": {
          "204": {
            "description": "The file has been successfully deleted at the back-end."
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Information about the authenticated user.",
        "description": "This endpoint always returns the user id and MAY return the disk quota available to the user.\nFor back-ends that involve accounting, this service MAY also return the currently available money or credits in the currency the back-end is working with.\nThis endpoint MAY be extended to fulfil the specification of the [OpenID Connect UserInfo Endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Holds user information. If no budget or storage limit applies to the user account the corresponding properties MUST be omited.",
                  "type": "object",
                  "additionalProperties": true,
                  "required": [
                    "user_id"
                  ],
                  "properties": {
                    "user_id": {
                      "$ref": "#/components/schemas/user_id"
                    },
                    "storage": {
                      "description": "Information about the storage space available to the user.",
                      "type": "object",
                      "required": [
                        "free",
                        "quota"
                      ],
                      "properties": {
                        "free": {
                          "type": "integer",
                          "description": "Free storage space in bytes, which is still availble to the user. Effectively, this is the disk quota minus the used space by the user, e.g. user-uploaded files and job results.",
                          "example": 536870912
                        },
                        "quota": {
                          "type": "integer",
                          "description": "Maximum storage space (disk quota) in bytes available to the user.",
                          "example": 1073741824
                        }
                      }
                    },
                    "budget": {
                      "$ref": "#/components/schemas/budget"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/client_error_auth"
          },
          "5XX": {
            "$ref": "#/components/responses/server_error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "link": {
        "description": "A link to another resource on the web. Bases on [RFC5899](https://tools.ietf.org/html/rfc5988) and SHOULD follow [registered link relation types](https://www.iana.org/assignments/link-relations/link-relations.xml) whenever feasible.",
        "type": "object",
        "required": [
          "href"
        ],
        "properties": {
          "rel": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "description": "The value MUST be a dereferenceable URI.",
            "format": "uri"
          },
          "type": {
            "type": "string",
            "description": "The value MUST be a string that hints at the format used to represent data at the provided URI, preferably a mime-type."
          },
          "title": {
            "type": "string",
            "description": "Used as a human-readable label for a link."
          }
        }
      },
      "money": {
        "description": "An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`.",
        "type": "number",
        "example": 12.98
      },
      "budget": {
        "type": "number",
        "description": "Maximum amount of costs the user is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If possible, back-ends SHOULD reject jobs with error code 402 if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought.",
        "example": 100
      },
      "billing_plan": {
        "type": "string",
        "description": "The billing plan to process and charge the job with. The plans can be retrieved by calling `GET /`.",
        "example": "free"
      },
      "data_id": {
        "type": "string",
        "description": "Unique identifier for EO datasets. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~\\/]+$",
        "example": "MOD18Q1"
      },
      "band_datatype": {
        "type": "string",
        "description": "Data type for band values including its bit size.",
        "enum": [
          "uint8",
          "uint16",
          "uint32",
          "uint64",
          "int8",
          "int16",
          "int32",
          "int64",
          "float16",
          "float32",
          "float64"
        ]
      },
      "band_description": {
        "type": "object",
        "required": [
          "band_id"
        ],
        "properties": {
          "band_id": {
            "description": "unique identifier for bands",
            "type": "string"
          },
          "name": {
            "description": "optional name to refer to bands by name such as 'red' instead of their band_id.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/band_datatype"
          },
          "offset": {
            "description": "offset to convert band values to the actual measurement scale.",
            "type": "number",
            "default": 0
          },
          "scale": {
            "description": "scale to convert band values to the actual measurement scale.",
            "type": "number",
            "default": 1
          },
          "unit": {
            "description": "unit of measurements (preferably SI)",
            "type": "string"
          },
          "nodata": {
            "description": "specific values representing no data",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "additionalProperties": true
      },
      "process_graph": {
        "description": "A process graph defines an executable process, i.e. one process or a combination of chained processes including specific arguments.",
        "type": "object",
        "required": [
          "process_id",
          "args"
        ],
        "properties": {
          "process_id": {
            "type": "string",
            "description": "The unique identifier of the process."
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "args": {
            "$ref": "#/components/schemas/arg_set"
          }
        },
        "example": {
          "process_id": "min_time",
          "description": "Deriving minimum NDVI measurements over pixel time series of Sentinel 2 imagery.",
          "args": {
            "imagery": {
              "process_id": "NDVI",
              "args": {
                "imagery": {
                  "process_id": "filter_daterange",
                  "args": {
                    "imagery": {
                      "process_id": "get_data",
                      "args": {
                        "data_id": "Sentinel2A-L1C"
                      }
                    },
                    "from": "2017-01-01",
                    "to": "2017-01-31"
                  }
                },
                "red": "4",
                "nir": "8"
              }
            }
          }
        }
      },
      "process_graph_id": {
        "type": "string",
        "description": "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "cc2bab1e3b3a52aa"
      },
      "arg_set": {
        "description": "Defines an object schema for a collection of uniquely named arguments (argument set) as input to processes. The values can by any of the JSON data types string, number, array, boolean or null. Additionally it can be any object of type **process_graph**. An array must always contain one data type only and is allowed to contain the data types allowed for argument set values. In consequence, the objects allowed to be part of an array are process_graphs only. See the API Concept Description for more information.",
        "type": "object",
        "additionalProperties": {
          "nullable": true,
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "array"
            },
            {
              "type": "boolean"
            },
            {
              "$ref": "#/components/schemas/process_graph"
            }
          ]
        }
      },
      "job_id": {
        "type": "string",
        "description": "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "a3cca2b2aa1e3b5b"
      },
      "submitted": {
        "type": "string",
        "format": "dateTime",
        "description": "Date and time of creation in ISO 8601 format",
        "example": "2017-01-01T09:32:12Z"
      },
      "updated": {
        "type": "string",
        "format": "dateTime",
        "description": "Date and time of last status change in ISO 8601 format.",
        "example": "2017-01-01T09:36:18Z"
      },
      "user_id": {
        "type": "string",
        "description": "Unique identifier of the user. MUST match the specified pattern. SHOULD be a human-friendly user name instead of a randomly generated identifier.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "john_doe"
      },
      "status": {
        "type": "string",
        "enum": [
          "submitted",
          "queued",
          "running",
          "canceled",
          "finished",
          "error"
        ],
        "description": "The current status of a batch job. The default state for a job is `Submitted`. A job is `queued` after calling `POST /jobs/{job_id}/results`. It remains in this state until processing has been started, which changes the status to `running`. After the processing has been completed the status is `finished` and results can be downloaded by requesting `GET /jobs/{job_id}/results`. Whenever an error occurs the status must be set to `error`.",
        "example": "running",
        "default": "submitted"
      },
      "title": {
        "description": "A short description to easily distinguish entities.",
        "type": "string",
        "example": "NDVI based on Sentinel 2"
      },
      "description": {
        "description": "Detailed description to fully explain the entity.",
        "type": "string",
        "example": "Deriving minimum NDVI measurements over pixel time series of Sentinel 2 imagery."
      },
      "service_type": {
        "description": "Definintion of the service type to access result data. All available service types can be retrieved via `GET /service_types`",
        "type": "string",
        "example": "wms"
      },
      "service_parameters": {
        "type": "object",
        "description": "Definintion of additional parameters a web service might need to be created. For example, this could specify the required version of the web service, visualization details or any other web service dependant configuration. See `GET /service_types` for supported parameters.",
        "additionalProperties": true,
        "example": {
          "version": 1.1
        }
      },
      "service_enabled": {
        "type": "boolean",
        "description": "Describes whether a web service is responding to requests (true) or not (false). Defaults to true. Disabled web services don't produce any costs.",
        "default": true
      },
      "service_url": {
        "type": "string",
        "format": "url",
        "description": "URL at which the web service is accessible. Doesn't necessarily need to be located within the API.",
        "example": "https://openeo.org/wms/wms-a3cca9"
      },
      "service_id": {
        "type": "string",
        "description": "Unique identifier of a web service that is generated by the back-end during web service creation. MUST match the specified pattern.",
        "pattern": "^[A-Za-z0-9_\\-\\.~]+$",
        "example": "wms-a3cca9"
      },
      "argument": {
        "type": "object",
        "description": "Describes a general argument for various entities.",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief description of the argument."
          },
          "required": {
            "type": "boolean",
            "description": "Determines whether this argument is mandatory.",
            "default": false
          },
          "default": {
            "description": "The default value represents what would be assumed by the consumer of the input as the value of the argument if none is provided. The value MUST conform to the defined type for the argument defined at the same level. For example, if type is string, then default can be \"foo\" but cannot be 1."
          },
          "minimum": {
            "type": "number",
            "description": "Minimum value allowed for numeric arguments."
          },
          "maximum": {
            "type": "number",
            "description": "Maximum value allowed for numeric arguments."
          },
          "enum": {
            "type": "array",
            "description": "List of allowed values for this argument. To represent examples that cannot be naturally represented in JSON, a string value can be used to contain the example with escaping where necessary.",
            "items": {
              "description": "A single value allowed for this argument."
            }
          },
          "example": {
            "description": "A free-form property to include an example for this argument. To represent examples that cannot be naturally represented in JSON, a string value can be used to contain the example with escaping where necessary."
          }
        },
        "example": null
      },
      "output_format": {
        "description": "Output format to be used. Supported formats and options can be retrieved using the endpoint `GET /output_formats`.",
        "type": "object",
        "required": [
          "format"
        ],
        "properties": {
          "format": {
            "type": "string",
            "description": "One of the supported output formats."
          },
          "args": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "example": {
          "format": "GTiff",
          "args": {
            "tiles": true,
            "compress": "jpeg",
            "photometric": "YCBCR",
            "jpeg_quality": 80
          }
        }
      },
      "error": {
        "description": "An error object declares addtional information about a client-side or server-side error.",
        "externalDocs": {
          "description": "Additional information regarding error handling and a list of error codes.",
          "url": "https://open-eo.github.io/openeo-api/v/0.3.0/errors/index.html"
        },
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A back-end may add a unique identifier to the error response to be able to log and track errors with further non-disclosable details.",
            "example": "550e8400-e29b-11d4-a716-446655440000"
          },
          "code": {
            "type": "number",
            "description": "The code is either one of the standardized error codes or a custom error code with a number greater than 10000.",
            "example": 123
          },
          "message": {
            "type": "string",
            "description": "The message explains what the client might need to change or what the server is struggling with. By default the message must be sent in English language. Content Negotiation is used to localize the error messages: If an Acceppt-Language header is sent by the client and a translation is available, the message should be translated accordingly and the Content-Language header must be present in the response.",
            "example": "A sample error message."
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "Can bet set to hold a URL to a resource that is explaining the error and potential solutions in-depth.",
            "example": "http://www.openeo.org/docs/errors/123"
          }
        }
      },
      "refsys": {
        "description": "Coordinate reference system. EPSG codes must be supported. In addition, proj4 strings should be supported by back-ends. Whenever possible, it is recommended to use EPSG codes instead of proj4 strings.\nDefaults to `EPSG:4326` unless the client explicitly requests a different coordinate reference system.",
        "type": "string",
        "default": "EPSG:4326",
        "example": "EPSG:3857"
      },
      "spatial_extent": {
        "description": "Spatial extent covered by the data",
        "type": "object",
        "required": [
          "left",
          "right",
          "top",
          "bottom"
        ],
        "properties": {
          "crs": {
            "$ref": "#/components/schemas/refsys"
          },
          "left": {
            "type": "number",
            "example": -34
          },
          "right": {
            "type": "number",
            "example": 35
          },
          "top": {
            "type": "number",
            "example": 71
          },
          "bottom": {
            "type": "number",
            "example": 39
          }
        }
      },
      "temporal_extent": {
        "type": "object",
        "properties": {
          "from": {
            "description": "Date/time in ISO 8601 format",
            "type": "string",
            "format": "date-time",
            "example": "2016-01-01"
          },
          "to": {
            "description": "Date/time in ISO 8601 format",
            "type": "string",
            "format": "date-time",
            "example": "2017-10-01"
          }
        }
      }
    },
    "responses": {
      "created": {
        "description": "The resource has been created successfully and the location of the newly created resource is advertized by the back-end.\nExamples: * `POST /services` redirects to `GET /services/{service_id}` * `POST /jobs` redirects to `GET /jobs/{job_id}`",
        "headers": {
          "Location": {
            "required": true,
            "schema": {
              "description": "URI to the newly created resource.",
              "format": "uri",
              "type": "string",
              "example": "https://openeo.org/api/v0/resource/123"
            }
          }
        }
      },
      "client_error": {
        "description": "The request can't be fulfilled due to an error on client-side, i.e. the request is invalid. The client should not repeat the request without modifications. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6). This request usually does not respond with HTTP status codes 401 and 403 due to missing authorization. HTTP status code 404 should be used if the value of a path parameter is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "client_error_auth": {
        "description": "The request can't be fulfilled due to an error on client-side, i.e. the request is invalid. The client should not repeat the request without modifications. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6). This request MUST respond with HTTP status codes 401 if authorization is required or 403 if the authorization failed or access is forbidden in general to the authenticated user. HTTP status code 404 should be used if the value of a path parameter is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "server_error": {
        "description": "The request can't be fulfilled due to an error at the back-end. The error is never the client’s fault and therefore it is reasonable for the client to retry the exact same request that triggered this response. The response body SHOULD contain a JSON error object. MUST be any HTTP status code specified in [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.6).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    },
    "parameters": {
      "user_id": {
        "name": "user_id",
        "in": "path",
        "description": "Unique user identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/user_id"
        }
      },
      "process_graph_id": {
        "name": "process_graph_id",
        "in": "path",
        "description": "Unique process graph identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/process_graph_id"
        }
      },
      "service_id": {
        "name": "service_id",
        "in": "path",
        "description": "Unique web service identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/service_id"
        }
      },
      "job_id": {
        "name": "job_id",
        "in": "path",
        "description": "Unique job identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/job_id"
        }
      },
      "data_id": {
        "name": "data_id",
        "in": "path",
        "description": "Unique dataset identifier.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/data_id"
        }
      },
      "file_path": {
        "name": "path",
        "in": "path",
        "description": "Path of the file. Folder and file names in the path MUST be url-encoded. The path separator `/` MUST NOT be url-encoded.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "borders/europe.geojson"
        }
      }
    },
    "requestBodies": {
      "process_graph": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/process_graph"
            }
          }
        },
        "description": "Description of one or more (chained) processes including their input arguments",
        "required": true
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "Basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}